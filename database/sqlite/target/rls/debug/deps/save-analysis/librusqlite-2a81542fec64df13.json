{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1","program":"/Users/watanabeshunsuke/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rusqlite","--edition=2018","/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=2a81542fec64df13","-C","extra-filename=-2a81542fec64df13","--out-dir","/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps","-L","dependency=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps","--extern","bitflags=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/libbitflags-b4fd2bca64ae00d7.rmeta","--extern","fallible_iterator=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/libfallible_iterator-4e7453903081e8e8.rmeta","--extern","fallible_streaming_iterator=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/libfallible_streaming_iterator-fb75228418f5aa26.rmeta","--extern","libsqlite3_sys=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/liblibsqlite3_sys-1d6c217899dc4395.rmeta","--extern","lru_cache=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/liblru_cache-c5f8636040821943.rmeta","--extern","memchr=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/libmemchr-bb518ee07713b7ba.rmeta","--extern","smallvec=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/libsmallvec-5db99e11a5d4b455.rmeta","--extern","time=/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/libtime-cf408377d5815edc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/watanabeshunsuke/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/watanabeshunsuke/rust/training/database/sqlite/target/rls/debug/deps/librusqlite-2a81542fec64df13.rmeta"},"prelude":{"crate_id":{"name":"rusqlite","disambiguator":[4503840829672210916,13781211129701743809]},"crate_root":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src","external_crates":[{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4764348733193513031,634526535461708798]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1442326455198172401,16827337489037353969]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12054269309559547164,403528097874103758]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18119295300660958056,15936712641001091472]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8467185899157176901,5449114614531918343]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6399579860591818883,1861182124498570286]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5934281359445186259,17569308659596391902]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13411228280306895108,18307809851336013232]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6991553045555133022,10391329883647596551]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[12965431198908124934,18004796543845665014]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[17525835346239097561,8778688016660685031]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[16866301928884371641,12906074390672532027]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14707452596726515572,12648684369639413126]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[6619135282819627752,14012907817905728436]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":15,"id":{"name":"libsqlite3_sys","disambiguator":[4985178806632274808,16357718582995252705]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","num":16,"id":{"name":"lru_cache","disambiguator":[10957166330772752842,3932995075710373695]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","num":17,"id":{"name":"linked_hash_map","disambiguator":[1713578069410549343,17128728622121928253]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","num":18,"id":{"name":"fallible_iterator","disambiguator":[5069381177520313241,5700825550768322812]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","num":19,"id":{"name":"fallible_streaming_iterator","disambiguator":[10584052459957939382,8093689599137978544]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","num":20,"id":{"name":"smallvec","disambiguator":[5970244388310361100,4380903287815774674]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","num":21,"id":{"name":"bitflags","disambiguator":[5226278972227960559,4830602691779770042]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/time.rs","num":22,"id":{"name":"time","disambiguator":[13754989045080365609,13461820733798591459]}},{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/time.rs","num":23,"id":{"name":"libc","disambiguator":[3977511018665272147,15259781522312521302]}}],"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":0,"byte_end":59646,"line_start":1,"line_end":1793,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1711,"byte_end":1725,"line_start":58,"line_end":58,"column_start":9,"column_end":23},"alias_span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1729,"byte_end":1732,"line_start":58,"line_end":58,"column_start":27,"column_end":30},"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2204,"byte_end":2219,"line_start":78,"line_end":78,"column_start":23,"column_end":38},"alias_span":null,"name":"CachedStatement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":998},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2244,"byte_end":2250,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"alias_span":null,"name":"Column","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":934},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2274,"byte_end":2279,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":116},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2301,"byte_end":2310,"line_start":81,"line_end":81,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2481,"byte_end":2492,"line_start":86,"line_end":86,"column_start":22,"column_end":33},"alias_span":null,"name":"AndThenRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2494,"byte_end":2504,"line_start":86,"line_end":86,"column_start":35,"column_end":45},"alias_span":null,"name":"MappedRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2506,"byte_end":2509,"line_start":86,"line_end":86,"column_start":47,"column_end":50},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":455},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2511,"byte_end":2519,"line_start":86,"line_end":86,"column_start":52,"column_end":60},"alias_span":null,"name":"RowIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2521,"byte_end":2525,"line_start":86,"line_end":86,"column_start":62,"column_end":66},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2555,"byte_end":2564,"line_start":87,"line_end":87,"column_start":28,"column_end":37},"alias_span":null,"name":"Statement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2566,"byte_end":2581,"line_start":87,"line_end":87,"column_start":39,"column_end":54},"alias_span":null,"name":"StatementStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1053},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2613,"byte_end":2625,"line_start":88,"line_end":88,"column_start":30,"column_end":42},"alias_span":null,"name":"DropBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2627,"byte_end":2636,"line_start":88,"line_end":88,"column_start":44,"column_end":53},"alias_span":null,"name":"Savepoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2638,"byte_end":2649,"line_start":88,"line_end":88,"column_start":55,"column_end":66},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2651,"byte_end":2670,"line_start":88,"line_end":88,"column_start":68,"column_end":87},"alias_span":null,"name":"TransactionBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2695,"byte_end":2700,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2726,"byte_end":2727,"line_start":90,"line_end":90,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211015,"byte_end":211022,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"FromSql","value":"","parent":{"krate":0,"index":623}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211024,"byte_end":211036,"line_start":51,"line_end":51,"column_start":35,"column_end":47},"alias_span":null,"name":"FromSqlError","value":"","parent":{"krate":0,"index":623}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211038,"byte_end":211051,"line_start":51,"line_end":51,"column_start":49,"column_end":62},"alias_span":null,"name":"FromSqlResult","value":"","parent":{"krate":0,"index":623}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211077,"byte_end":211082,"line_start":52,"line_end":52,"column_start":24,"column_end":29},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":623}},{"kind":"Use","ref_id":{"krate":0,"index":1109},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211084,"byte_end":211095,"line_start":52,"line_end":52,"column_start":31,"column_end":42},"alias_span":null,"name":"ToSqlOutput","value":"","parent":{"krate":0,"index":623}},{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211119,"byte_end":211124,"line_start":53,"line_end":53,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":623}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211151,"byte_end":211159,"line_start":54,"line_end":54,"column_start":26,"column_end":34},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":623}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":0,"byte_end":59646,"line_start":1,"line_end":1793,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":76},{"krate":0,"index":99},{"krate":0,"index":140},{"krate":0,"index":176},{"krate":0,"index":207},{"krate":0,"index":267},{"krate":0,"index":318},{"krate":0,"index":350},{"krate":0,"index":461},{"krate":0,"index":559},{"krate":0,"index":623},{"krate":0,"index":800},{"krate":0,"index":805},{"krate":0,"index":810},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":1296},{"krate":0,"index":1308},{"krate":0,"index":1305},{"krate":0,"index":871},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":921},{"krate":0,"index":1310},{"krate":0,"index":1332},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1323},{"krate":0,"index":1317},{"krate":0,"index":1315},{"krate":0,"index":1312},{"krate":0,"index":1333},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":933}],"decl_id":null,"docs":" Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to\n expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","sig":null,"attributes":[{"value":"! Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":80,"byte_end":174,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":175,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":179,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"! use rusqlite::{params, Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":191,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"! use time::Timespec;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":239,"byte_end":262,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":263,"byte_end":266,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug)]","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":267,"byte_end":287,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"! struct Person {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":288,"byte_end":307,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"!     id: i32,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":308,"byte_end":324,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"!     name: String,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":325,"byte_end":346,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"!     time_created: Timespec,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":347,"byte_end":378,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"!     data: Option<Vec<u8>>,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":379,"byte_end":409,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":410,"byte_end":415,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":416,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":420,"byte_end":449,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"!     let conn = Connection::open_in_memory()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":450,"byte_end":499,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":500,"byte_end":503,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"!     conn.execute(","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":504,"byte_end":525,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"!         \"CREATE TABLE person (","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":526,"byte_end":560,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"!                   id              INTEGER PRIMARY KEY,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":561,"byte_end":619,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"!                   name            TEXT NOT NULL,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":620,"byte_end":672,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"!                   time_created    TEXT NOT NULL,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":673,"byte_end":725,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"!                   data            BLOB","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":726,"byte_end":768,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"!                   )\",","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":769,"byte_end":794,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"!         params![],","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":795,"byte_end":817,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"!     )?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":818,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"!     let me = Person {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":830,"byte_end":855,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"!         id: 0,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":856,"byte_end":874,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"!         name: \"Steven\".to_string(),","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":875,"byte_end":914,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"!         time_created: time::get_time(),","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":915,"byte_end":958,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"!         data: None,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":959,"byte_end":982,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"!     };","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":983,"byte_end":993,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"!     conn.execute(","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":994,"byte_end":1015,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"!         \"INSERT INTO person (name, time_created, data)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1016,"byte_end":1074,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"!                   VALUES (?1, ?2, ?3)\",","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1075,"byte_end":1118,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"!         params![me.name, me.time_created, me.data],","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1119,"byte_end":1174,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"!     )?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1175,"byte_end":1186,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1187,"byte_end":1190,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"!     let mut stmt = conn.prepare(\"SELECT id, name, time_created, data FROM person\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1191,"byte_end":1279,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"!     let person_iter = stmt.query_map(params![], |row| {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1280,"byte_end":1339,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"!         Ok(Person {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1340,"byte_end":1363,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"!             id: row.get(0)?,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1364,"byte_end":1396,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"!             name: row.get(1)?,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1397,"byte_end":1431,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"!             time_created: row.get(2)?,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1432,"byte_end":1474,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"!             data: row.get(3)?,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1475,"byte_end":1509,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"!         })","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1510,"byte_end":1524,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"!     })?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1525,"byte_end":1537,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1538,"byte_end":1541,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"!     for person in person_iter {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1542,"byte_end":1577,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"!         println!(\"Found person {:?}\", person.unwrap());","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1578,"byte_end":1637,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"!     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1638,"byte_end":1647,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"!     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1648,"byte_end":1662,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1663,"byte_end":1668,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1669,"byte_end":1676,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"allow(unknown_lints)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":1677,"byte_end":1701,"line_start":56,"line_end":56,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60024,"byte_end":60037,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"SqliteFailure","qualname":"::error::Error::SqliteFailure","value":"Error::SqliteFailure(ffi::Error, Option<String>)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" An error from an underlying SQLite call.\n","sig":null,"attributes":[{"value":"/ An error from an underlying SQLite call.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":59975,"byte_end":60019,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60202,"byte_end":60226,"line_start":20,"line_end":20,"column_start":5,"column_end":29},"name":"SqliteSingleThreadedMode","qualname":"::error::Error::SqliteSingleThreadedMode","value":"Error::SqliteSingleThreadedMode","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error reported when attempting to open a connection when SQLite was\n configured to allow single-threaded use only.\n","sig":null,"attributes":[{"value":"/ Error reported when attempting to open a connection when SQLite was","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60072,"byte_end":60143,"line_start":18,"line_end":18,"column_start":5,"column_end":76}},{"value":"/ configured to allow single-threaded use only.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60148,"byte_end":60197,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60362,"byte_end":60386,"line_start":24,"line_end":24,"column_start":5,"column_end":29},"name":"FromSqlConversionFailure","qualname":"::error::Error::FromSqlConversionFailure","value":"Error::FromSqlConversionFailure(usize, Type, Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but it cannot\n be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but it cannot","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60233,"byte_end":60308,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ be converted to the requested Rust type.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60313,"byte_end":60357,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60722,"byte_end":60745,"line_start":30,"line_end":30,"column_start":5,"column_end":28},"name":"IntegralValueOutOfRange","qualname":"::error::Error::IntegralValueOutOfRange","value":"Error::IntegralValueOutOfRange(usize, i64)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when SQLite gives us an integral value outside the range of the\n requested type (e.g., trying to get the value 1000 into a `u8`).\n The associated `usize` is the column index,\n and the associated `i64` is the value returned by SQLite.\n","sig":null,"attributes":[{"value":"/ Error when SQLite gives us an integral value outside the range of the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60453,"byte_end":60526,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ requested type (e.g., trying to get the value 1000 into a `u8`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60531,"byte_end":60599,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ The associated `usize` is the column index,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60604,"byte_end":60651,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ and the associated `i64` is the value returned by SQLite.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60656,"byte_end":60717,"line_start":29,"line_end":29,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60808,"byte_end":60817,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error converting a string to UTF-8.\n","sig":null,"attributes":[{"value":"/ Error converting a string to UTF-8.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60764,"byte_end":60803,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60945,"byte_end":60953,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"NulError","qualname":"::error::Error::NulError","value":"Error::NulError(::std::ffi::NulError)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error converting a string to a C-compatible string because it contained\n an embedded nul.\n","sig":null,"attributes":[{"value":"/ Error converting a string to a C-compatible string because it contained","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60840,"byte_end":60915,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ an embedded nul.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60920,"byte_end":60940,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":956},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61089,"byte_end":61109,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"InvalidParameterName","qualname":"::error::Error::InvalidParameterName","value":"Error::InvalidParameterName(String)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when using SQL named parameters and passing a parameter name not\n present in the SQL.\n","sig":null,"attributes":[{"value":"/ Error when using SQL named parameters and passing a parameter name not","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":60982,"byte_end":61056,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ present in the SQL.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61061,"byte_end":61084,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":959},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61174,"byte_end":61185,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::error::Error::InvalidPath","value":"Error::InvalidPath(PathBuf)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error converting a file path to a string.\n","sig":null,"attributes":[{"value":"/ Error converting a file path to a string.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61124,"byte_end":61169,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":962},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61261,"byte_end":61283,"line_start":47,"line_end":47,"column_start":5,"column_end":27},"name":"ExecuteReturnedResults","qualname":"::error::Error::ExecuteReturnedResults","value":"Error::ExecuteReturnedResults","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error returned when an `execute` call returns rows.\n","sig":null,"attributes":[{"value":"/ Error returned when an `execute` call returns rows.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61201,"byte_end":61256,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":964},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61414,"byte_end":61433,"line_start":51,"line_end":51,"column_start":5,"column_end":24},"name":"QueryReturnedNoRows","qualname":"::error::Error::QueryReturnedNoRows","value":"Error::QueryReturnedNoRows","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when a query that was expected to return at least one row (e.g.,\n for `query_row`) did not return any.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to return at least one row (e.g.,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61290,"byte_end":61364,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ for `query_row`) did not return any.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61369,"byte_end":61409,"line_start":50,"line_end":50,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":966},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61563,"byte_end":61581,"line_start":55,"line_end":55,"column_start":5,"column_end":23},"name":"InvalidColumnIndex","qualname":"::error::Error::InvalidColumnIndex","value":"Error::InvalidColumnIndex(usize)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the index\n is out of range for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the index","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61440,"byte_end":61515,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ is out of range for the statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61520,"byte_end":61558,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61714,"byte_end":61731,"line_start":59,"line_end":59,"column_start":5,"column_end":22},"name":"InvalidColumnName","qualname":"::error::Error::InvalidColumnName","value":"Error::InvalidColumnName(String)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when the value of a named column is requested, but no column\n matches the name for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a named column is requested, but no column","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61595,"byte_end":61665,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/ matches the name for the statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61670,"byte_end":61709,"line_start":58,"line_end":58,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":972},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61918,"byte_end":61935,"line_start":64,"line_end":64,"column_start":5,"column_end":22},"name":"InvalidColumnType","qualname":"::error::Error::InvalidColumnType","value":"Error::InvalidColumnType(usize, String, Type)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the type\n of the result in that column cannot be converted to the requested\n Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the type","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61746,"byte_end":61820,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ of the result in that column cannot be converted to the requested","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61825,"byte_end":61894,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ Rust type.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61899,"byte_end":61913,"line_start":63,"line_end":63,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":62069,"byte_end":62089,"line_start":68,"line_end":68,"column_start":5,"column_end":25},"name":"StatementChangedRows","qualname":"::error::Error::StatementChangedRows","value":"Error::StatementChangedRows(usize)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when a query that was expected to insert one row did not insert\n any or insert many.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to insert one row did not insert","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":61963,"byte_end":62036,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ any or insert many.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":62041,"byte_end":62064,"line_start":67,"line_end":67,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":980},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":62823,"byte_end":62845,"line_start":86,"line_end":86,"column_start":5,"column_end":27},"name":"ToSqlConversionFailure","qualname":"::error::Error::ToSqlConversionFailure","value":"Error::ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error available for the implementors of the `ToSql` trait.\n","sig":null,"attributes":[{"value":"/ Error available for the implementors of the `ToSql` trait.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":62756,"byte_end":62818,"line_start":85,"line_end":85,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":983},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":62963,"byte_end":62975,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"name":"InvalidQuery","qualname":"::error::Error::InvalidQuery","value":"Error::InvalidQuery","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when the SQL is not a `SELECT`, is not read-only.\n","sig":null,"attributes":[{"value":"/ Error when the SQL is not a `SELECT`, is not read-only.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":62899,"byte_end":62958,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63485,"byte_end":63502,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"MultipleStatement","qualname":"::error::Error::MultipleStatement","value":"Error::MultipleStatement","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when the SQL contains multiple statements.\n","sig":null,"attributes":[{"value":"/ Error when the SQL contains multiple statements.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63428,"byte_end":63480,"line_start":105,"line_end":105,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63716,"byte_end":63737,"line_start":110,"line_end":110,"column_start":5,"column_end":26},"name":"InvalidParameterCount","qualname":"::error::Error::InvalidParameterCount","value":"Error::InvalidParameterCount(usize, usize)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Error when the number of bound parameters does not match the number of\n parameters in the query. The first `usize` is how many parameters were\n given, the 2nd is how many were expected.\n","sig":null,"attributes":[{"value":"/ Error when the number of bound parameters does not match the number of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63508,"byte_end":63582,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ parameters in the query. The first `usize` is how many parameters were","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63587,"byte_end":63661,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ given, the 2nd is how many were expected.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63666,"byte_end":63711,"line_start":109,"line_end":109,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":934},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":59963,"byte_end":59968,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{SqliteFailure, SqliteSingleThreadedMode, FromSqlConversionFailure, IntegralValueOutOfRange, Utf8Error, NulError, InvalidParameterName, InvalidPath, ExecuteReturnedResults, QueryReturnedNoRows, InvalidColumnIndex, InvalidColumnName, InvalidColumnType, StatementChangedRows, ToSqlConversionFailure, InvalidQuery, MultipleStatement, InvalidParameterCount}","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987}],"decl_id":null,"docs":" Enum listing possible errors from rusqlite.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from rusqlite.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":59834,"byte_end":59881,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"allow(clippy :: enum_variant_names)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":59899,"byte_end":59935,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":59936,"byte_end":59953,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73942,"byte_end":73954,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"busy_timeout","qualname":"<Connection>::busy_timeout","value":"fn (&self, timeout: Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a busy handler that sleeps for a specified amount of time when a\n table is locked. The handler will sleep multiple times until at\n least \"ms\" milliseconds of sleeping have accumulated.","sig":null,"attributes":[{"value":"/ Set a busy handler that sleeps for a specified amount of time when a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73355,"byte_end":73427,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ table is locked. The handler will sleep multiple times until at","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73432,"byte_end":73499,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ least \"ms\" milliseconds of sleeping have accumulated.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73504,"byte_end":73561,"line_start":15,"line_end":15,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73566,"byte_end":73569,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Calling this routine with an argument equal to zero turns off all busy","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73574,"byte_end":73648,"line_start":17,"line_end":17,"column_start":5,"column_end":79}},{"value":"/ handlers.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73653,"byte_end":73666,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73671,"byte_end":73674,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler for a particular database","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73679,"byte_end":73748,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ connection at any given moment. If another busy handler was defined","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73753,"byte_end":73824,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ (using `busy_handler`) prior to calling this routine, that other","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73829,"byte_end":73897,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/ busy handler is cleared.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73902,"byte_end":73930,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":75274,"byte_end":75286,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"busy_handler","qualname":"<Connection>::busy_handler","value":"fn (&self, callback: Option<fn(i32) -> bool>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to handle `SQLITE_BUSY` errors.","sig":null,"attributes":[{"value":"/ Register a callback to handle `SQLITE_BUSY` errors.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74288,"byte_end":74343,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74348,"byte_end":74351,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ If the busy callback is `None`, then `SQLITE_BUSY is returned","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74356,"byte_end":74421,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/ immediately upon encountering the lock.` The argument to the busy","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74426,"byte_end":74495,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ handler callback is the number of times that the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74500,"byte_end":74552,"line_start":38,"line_end":38,"column_start":5,"column_end":57}},{"value":"/ busy handler has been invoked previously for the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74557,"byte_end":74609,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/ same locking event. If the busy callback returns `false`, then no","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74614,"byte_end":74683,"line_start":40,"line_end":40,"column_start":5,"column_end":74}},{"value":"/ additional attempts are made to access the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74688,"byte_end":74734,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/ database and `SQLITE_BUSY` is returned to the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74739,"byte_end":74788,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/ application. If the callback returns `true`, then another attempt","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74793,"byte_end":74862,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ is made to access the database and the cycle repeats.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74867,"byte_end":74924,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74929,"byte_end":74932,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler defined for each database","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":74937,"byte_end":75006,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ connection. Setting a new busy handler clears any previously set","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":75011,"byte_end":75079,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ handler. Note that calling `busy_timeout()` or evaluating `PRAGMA","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":75084,"byte_end":75153,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ busy_timeout=N` will change the busy handler and thus","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":75158,"byte_end":75215,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/ clear any previously set busy handler.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":75220,"byte_end":75262,"line_start":50,"line_end":50,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80819,"byte_end":80833,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"prepare_cached","qualname":"<Connection>::prepare_cached","value":"fn (&self, sql: &str) -> Result<CachedStatement<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution, returning a previously prepared\n (but not currently in-use) statement if one is available. The\n returned statement will be cached for reuse by future calls to\n `prepare_cached` once it is dropped.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution, returning a previously prepared","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":79732,"byte_end":79806,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (but not currently in-use) statement if one is available. The","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":79811,"byte_end":79876,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/ returned statement will be cached for reuse by future calls to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":79881,"byte_end":79947,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/ `prepare_cached` once it is dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":79952,"byte_end":79992,"line_start":14,"line_end":14,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":79997,"byte_end":80000,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80005,"byte_end":80023,"line_start":16,"line_end":16,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80028,"byte_end":80069,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80074,"byte_end":80133,"line_start":18,"line_end":18,"column_start":5,"column_end":64}},{"value":"/     {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80138,"byte_end":80147,"line_start":19,"line_end":19,"column_start":5,"column_end":14}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80152,"byte_end":80240,"line_start":20,"line_end":20,"column_start":5,"column_end":93}},{"value":"/         stmt.execute(&[\"Joe Smith\"])?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80245,"byte_end":80287,"line_start":21,"line_end":21,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80292,"byte_end":80301,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"/     {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80306,"byte_end":80315,"line_start":23,"line_end":23,"column_start":5,"column_end":14}},{"value":"/         // This will return the same underlying SQLite statement handle without","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80320,"byte_end":80403,"line_start":24,"line_end":24,"column_start":5,"column_end":88}},{"value":"/         // having to prepare it again.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80408,"byte_end":80450,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80455,"byte_end":80543,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/         stmt.execute(&[\"Bob Jones\"])?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80548,"byte_end":80590,"line_start":27,"line_end":27,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80595,"byte_end":80604,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80609,"byte_end":80623,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80628,"byte_end":80633,"line_start":30,"line_end":30,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80638,"byte_end":80645,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80650,"byte_end":80653,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80658,"byte_end":80671,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80676,"byte_end":80679,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80684,"byte_end":80759,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80764,"byte_end":80807,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81260,"byte_end":81297,"line_start":46,"line_end":46,"column_start":12,"column_end":49},"name":"set_prepared_statement_cache_capacity","qualname":"<Connection>::set_prepared_statement_cache_capacity","value":"fn (&self, capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of cached prepared statements this connection\n will hold. By default, a connection will hold a relatively small\n number of cached statements. If you need more, or know that you\n will not use cached statements, you\n can set the capacity manually using this method.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of cached prepared statements this connection","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":80930,"byte_end":81002,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ will hold. By default, a connection will hold a relatively small","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81007,"byte_end":81075,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ number of cached statements. If you need more, or know that you","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81080,"byte_end":81147,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ will not use cached statements, you","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81152,"byte_end":81191,"line_start":44,"line_end":44,"column_start":5,"column_end":44}},{"value":"/ can set the capacity manually using this method.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81196,"byte_end":81248,"line_start":45,"line_end":45,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81456,"byte_end":81486,"line_start":51,"line_end":51,"column_start":12,"column_end":42},"name":"flush_prepared_statement_cache","qualname":"<Connection>::flush_prepared_statement_cache","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove/finalize all prepared statements currently in the cache.\n","sig":null,"attributes":[{"value":"/ Remove/finalize all prepared statements currently in the cache.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81377,"byte_end":81444,"line_start":50,"line_end":50,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81831,"byte_end":81846,"line_start":64,"line_end":64,"column_start":12,"column_end":27},"name":"CachedStatement","qualname":"::cache::CachedStatement","value":"CachedStatement {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" Cacheable statement.","sig":null,"attributes":[{"value":"/ Cacheable statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81655,"byte_end":81679,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81680,"byte_end":81683,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Statement will return automatically to the cache by default.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81684,"byte_end":81748,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ If you want the statement to be discarded, call `discard()` on it.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81749,"byte_end":81819,"line_start":63,"line_end":63,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82814,"byte_end":82821,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"discard","qualname":"<CachedStatement>::discard","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Discard the statement, preventing it from being returned to its\n `Connection`'s collection of cached statements.\n","sig":null,"attributes":[{"value":"/ Discard the statement, preventing it from being returned to its","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82679,"byte_end":82746,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ `Connection`'s collection of cached statements.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82751,"byte_end":82802,"line_start":101,"line_end":101,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":998},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90066,"byte_end":90072,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Column","qualname":"::column::Column","value":"Column {  }","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"decl_id":null,"docs":" Information about a column of a SQLite query.\n","sig":null,"attributes":[{"value":"/ Information about a column of a SQLite query.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":89988,"byte_end":90037,"line_start":5,"line_end":5,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90211,"byte_end":90215,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"name","qualname":"<Column>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the column.\n","sig":null,"attributes":[{"value":"/ Returns the name of the column.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90164,"byte_end":90199,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90333,"byte_end":90342,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"decl_type","qualname":"<Column>::decl_type","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the column (`None` for expression).\n","sig":null,"attributes":[{"value":"/ Returns the type of the column (`None` for expression).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90262,"byte_end":90321,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90510,"byte_end":90522,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Statement>::column_names","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names in the result set of the prepared statement.\n","sig":null,"attributes":[{"value":"/ Get all the column names in the result set of the prepared statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90425,"byte_end":90498,"line_start":25,"line_end":25,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90875,"byte_end":90887,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Statement>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the result set returned by the prepared\n statement.\n","sig":null,"attributes":[{"value":"/ Return the number of columns in the result set returned by the prepared","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90769,"byte_end":90844,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90849,"byte_end":90863,"line_start":37,"line_end":37,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91526,"byte_end":91537,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Statement>::column_name","value":"fn (&self, col: usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name assigned to a particular column in the result set\n returned by the prepared statement.","sig":null,"attributes":[{"value":"/ Returns the name assigned to a particular column in the result set","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91193,"byte_end":91263,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ returned by the prepared statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91268,"byte_end":91307,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91312,"byte_end":91315,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91320,"byte_end":91334,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91339,"byte_end":91342,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91347,"byte_end":91419,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91424,"byte_end":91454,"line_start":54,"line_end":54,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91459,"byte_end":91462,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Panics when column name is not valid UTF-8.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91467,"byte_end":91514,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92197,"byte_end":92209,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Statement>::column_index","value":"fn (&self, name: &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column index in the result set for a given column name.","sig":null,"attributes":[{"value":"/ Returns the column index in the result set for a given column name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91824,"byte_end":91895,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91900,"byte_end":91903,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If there is no AS clause then the name of the column is unspecified and","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91908,"byte_end":91983,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ may change from one release of SQLite to the next.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":91988,"byte_end":92042,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92047,"byte_end":92050,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92055,"byte_end":92068,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92073,"byte_end":92076,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Will return an `Error::InvalidColumnName` when there is no column with","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92081,"byte_end":92155,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the specified `name`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92160,"byte_end":92185,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92762,"byte_end":92769,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"columns","qualname":"<Statement>::columns","value":"fn (&self) -> Vec<Column>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice describing the columns of the result of the query.\n","sig":null,"attributes":[{"value":"/ Returns a slice describing the columns of the result of the query.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":92680,"byte_end":92750,"line_start":88,"line_end":88,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93329,"byte_end":93341,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Rows>::column_names","value":"fn (&self) -> Option<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names.\n","sig":null,"attributes":[{"value":"/ Get all the column names.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93288,"byte_end":93317,"line_start":105,"line_end":105,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93475,"byte_end":93487,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Rows>::column_count","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns.\n","sig":null,"attributes":[{"value":"/ Return the number of columns.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93430,"byte_end":93463,"line_start":110,"line_end":110,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93618,"byte_end":93629,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Rows>::column_name","value":"fn (&self, col: usize) -> Option<Result<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the column.\n","sig":null,"attributes":[{"value":"/ Return the name of the column.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93572,"byte_end":93606,"line_start":115,"line_end":115,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93785,"byte_end":93797,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Rows>::column_index","value":"fn (&self, name: &str) -> Option<Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the column.\n","sig":null,"attributes":[{"value":"/ Return the index of the column.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93738,"byte_end":93773,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93976,"byte_end":93983,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"columns","qualname":"<Rows>::columns","value":"fn (&self) -> Option<Vec<Column>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice describing the columns of the Rows.\n","sig":null,"attributes":[{"value":"/ Returns a slice describing the columns of the Rows.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93909,"byte_end":93964,"line_start":125,"line_end":125,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94148,"byte_end":94160,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Row>::column_names","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names of the Row.\n","sig":null,"attributes":[{"value":"/ Get all the column names of the Row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94096,"byte_end":94136,"line_start":132,"line_end":132,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94291,"byte_end":94303,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Row>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the current row.\n","sig":null,"attributes":[{"value":"/ Return the number of columns in the current row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94227,"byte_end":94279,"line_start":137,"line_end":137,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94412,"byte_end":94423,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Row>::column_name","value":"fn (&self, col: usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the column.\n","sig":null,"attributes":[{"value":"/ Return the name of the column.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94366,"byte_end":94400,"line_start":142,"line_end":142,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94554,"byte_end":94566,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Row>::column_index","value":"fn (&self, name: &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the column.\n","sig":null,"attributes":[{"value":"/ Return the index of the column.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94507,"byte_end":94542,"line_start":147,"line_end":147,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94719,"byte_end":94726,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"columns","qualname":"<Row>::columns","value":"fn (&self) -> Vec<Column>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice describing the columns of the Row.\n","sig":null,"attributes":[{"value":"/ Returns a slice describing the columns of the Row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94653,"byte_end":94707,"line_start":152,"line_end":152,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":176},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":204}],"decl_id":null,"docs":" Configure database connections\n","sig":null,"attributes":[{"value":"! Configure database connections","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":96734,"byte_end":96768,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":97114,"byte_end":97141,"line_start":15,"line_end":15,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_FKEY","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":97154,"byte_end":97184,"line_start":16,"line_end":16,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_ENABLE_TRIGGER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":189},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":97197,"byte_end":97234,"line_start":17,"line_end":17,"column_start":5,"column_end":42},"name":"SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":97309,"byte_end":97341,"line_start":19,"line_end":19,"column_start":5,"column_end":37},"name":"SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","value":"DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":97364,"byte_end":97391,"line_start":20,"line_end":20,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_QPSG","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":97419,"byte_end":97446,"line_start":21,"line_end":21,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_TRIGGER_EQP","qualname":"::config::DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","value":"DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":97519,"byte_end":97544,"line_start":23,"line_end":23,"column_start":5,"column_end":30},"name":"SQLITE_DBCONFIG_DEFENSIVE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DEFENSIVE","value":"DbConfig::SQLITE_DBCONFIG_DEFENSIVE","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":182},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":96979,"byte_end":96987,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"DbConfig","qualname":"::config::DbConfig","value":"DbConfig::{SQLITE_DBCONFIG_ENABLE_FKEY, SQLITE_DBCONFIG_ENABLE_TRIGGER, SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER, SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE, SQLITE_DBCONFIG_ENABLE_QPSG, SQLITE_DBCONFIG_TRIGGER_EQP, SQLITE_DBCONFIG_DEFENSIVE}","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201}],"decl_id":null,"docs":" Database Connection Configuration Options\n","sig":null,"attributes":[{"value":"/ Database Connection Configuration Options","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":96846,"byte_end":96891,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"repr(i32)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":96892,"byte_end":96904,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":96905,"byte_end":96951,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":96952,"byte_end":96969,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99072,"byte_end":99081,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"db_config","qualname":"<Connection>::db_config","value":"fn (&self, config: DbConfig) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current value of a `config`.","sig":null,"attributes":[{"value":"/ Returns the current value of a `config`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98215,"byte_end":98259,"line_start":41,"line_end":41,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98264,"byte_end":98267,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: return `false` or `true` to indicate","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98272,"byte_end":98343,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/   whether FK enforcement is off or on","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98348,"byte_end":98389,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: return `false` or `true` to indicate","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98394,"byte_end":98468,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/   whether triggers are disabled or enabled","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98473,"byte_end":98519,"line_start":46,"line_end":46,"column_start":5,"column_end":51}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: return `false` or `true` to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98524,"byte_end":98596,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/   indicate whether fts3_tokenizer are disabled or enabled","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98601,"byte_end":98662,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: return `false` to indicate","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98667,"byte_end":98733,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/   checkpoints-on-close are not disabled or `true` if they are","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98738,"byte_end":98803,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: return `false` or `true` to indicate","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98808,"byte_end":98879,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/   whether the QPSG is disabled or enabled","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98884,"byte_end":98929,"line_start":52,"line_end":52,"column_start":5,"column_end":50}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: return `false` to indicate","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98934,"byte_end":98995,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"/   output-for-trigger are not disabled or `true` if it is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99000,"byte_end":99060,"line_start":54,"line_end":54,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":100188,"byte_end":100201,"line_start":83,"line_end":83,"column_start":12,"column_end":25},"name":"set_db_config","qualname":"<Connection>::set_db_config","value":"fn (&self, config: DbConfig, new_val: bool) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Make configuration changes to a database connection","sig":null,"attributes":[{"value":"/ Make configuration changes to a database connection","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99412,"byte_end":99467,"line_start":69,"line_end":69,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99472,"byte_end":99475,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: `false` to disable FK enforcement, `true`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99480,"byte_end":99556,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/   to enable FK enforcement","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99561,"byte_end":99591,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: `false` to disable triggers, `true` to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99596,"byte_end":99672,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/   enable triggers","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99677,"byte_end":99698,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: `false` to disable","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99703,"byte_end":99766,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/   fts3_tokenizer(), `true` to enable fts3_tokenizer()","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99771,"byte_end":99828,"line_start":76,"line_end":76,"column_start":5,"column_end":62}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: `false` (the default) to enable","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99833,"byte_end":99904,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/   checkpoints-on-close, `true` to disable them","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99909,"byte_end":99959,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: `false` to disable the QPSG, `true` to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":99964,"byte_end":100037,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/   enable QPSG","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":100042,"byte_end":100059,"line_start":80,"line_end":80,"column_start":5,"column_end":22}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: `false` to disable output for trigger","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":100064,"byte_end":100136,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/   programs, `true` to enable it","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":100141,"byte_end":100176,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121760,"byte_end":121778,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"pragma_query_value","qualname":"<Connection>::pragma_query_value","value":"fn <T, F> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current value of `pragma_name`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121424,"byte_end":121469,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121474,"byte_end":121477,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return multiple rows/values which cannot be retrieved","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121482,"byte_end":121557,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ with this method.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121562,"byte_end":121583,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121588,"byte_end":121591,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121596,"byte_end":121692,"line_start":166,"line_end":166,"column_start":5,"column_end":101}},{"value":"/ `SELECT user_version FROM pragma_user_version;`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121697,"byte_end":121748,"line_start":167,"line_end":167,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122331,"byte_end":122343,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"pragma_query","qualname":"<Connection>::pragma_query","value":"fn <F> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, mut f: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current rows/values of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current rows/values of `pragma_name`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122112,"byte_end":122163,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122168,"byte_end":122171,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122176,"byte_end":122272,"line_start":184,"line_end":184,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_collation_list;`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122277,"byte_end":122319,"line_start":185,"line_end":185,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":123306,"byte_end":123312,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"pragma","qualname":"<Connection>::pragma","value":"fn <F> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, pragma_value: &dyn ToSql, mut f: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value(s) of `pragma_name` associated to\n `pragma_value`.","sig":null,"attributes":[{"value":"/ Query the current value(s) of `pragma_name` associated to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122860,"byte_end":122921,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ `pragma_value`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122926,"byte_end":122945,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122950,"byte_end":122953,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method can be used with query-only pragmas which need an argument","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":122958,"byte_end":123032,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ (e.g. `table_info('one_tbl')`) or pragmas which returns value(s)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":123037,"byte_end":123105,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ (e.g. `integrity_check`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":123110,"byte_end":123139,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":123144,"byte_end":123147,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":123152,"byte_end":123248,"line_start":213,"line_end":213,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_table_info(?);`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":123253,"byte_end":123294,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124288,"byte_end":124301,"line_start":246,"line_end":246,"column_start":12,"column_end":25},"name":"pragma_update","qualname":"<Connection>::pragma_update","value":"fn (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, pragma_value: &dyn ToSql) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name`.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124128,"byte_end":124165,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124170,"byte_end":124173,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return the updated value which cannot be retrieved","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124178,"byte_end":124250,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ with this method.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124255,"byte_end":124276,"line_start":245,"line_end":245,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124978,"byte_end":125001,"line_start":265,"line_end":265,"column_start":12,"column_end":35},"name":"pragma_update_and_check","qualname":"<Connection>::pragma_update_and_check","value":"fn <F, T> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, pragma_value: &dyn ToSql, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name` and return the updated value.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name` and return the updated value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124827,"byte_end":124893,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124898,"byte_end":124901,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Only few pragmas automatically return the updated value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":124906,"byte_end":124966,"line_start":264,"line_end":264,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":130060,"byte_end":130072,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"RawStatement","qualname":"::raw_statement::RawStatement","value":"RawStatement {  }","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":130851,"byte_end":130854,"line_start":32,"line_end":32,"column_start":19,"column_end":22},"name":"new","qualname":"<RawStatement>::new","value":"fn (stmt: *mut ffi::sqlite3_stmt, tail: bool) -> RawStatement","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":131085,"byte_end":131092,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"is_null","qualname":"<RawStatement>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":131414,"byte_end":131417,"line_start":53,"line_end":53,"column_start":19,"column_end":22},"name":"ptr","qualname":"<RawStatement>::ptr","value":"fn (&self) -> *mut ffi::sqlite3_stmt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":131488,"byte_end":131500,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"column_count","qualname":"<RawStatement>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":131675,"byte_end":131686,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"column_type","qualname":"<RawStatement>::column_type","value":"fn (&self, idx: usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":131803,"byte_end":131818,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"column_decltype","qualname":"<RawStatement>::column_decltype","value":"fn (&self, idx: usize) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":132122,"byte_end":132133,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"column_name","qualname":"<RawStatement>::column_name","value":"fn (&self, idx: usize) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":132738,"byte_end":132742,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"step","qualname":"<RawStatement>::step","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":133404,"byte_end":133409,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"reset","qualname":"<RawStatement>::reset","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":133494,"byte_end":133514,"line_start":119,"line_end":119,"column_start":12,"column_end":32},"name":"bind_parameter_count","qualname":"<RawStatement>::bind_parameter_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":133623,"byte_end":133643,"line_start":123,"line_end":123,"column_start":12,"column_end":32},"name":"bind_parameter_index","qualname":"<RawStatement>::bind_parameter_index","value":"fn (&self, name: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":133969,"byte_end":133983,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"clear_bindings","qualname":"<RawStatement>::clear_bindings","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":134077,"byte_end":134080,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"sql","qualname":"<RawStatement>::sql","value":"fn (&self) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":134273,"byte_end":134281,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"finalize","qualname":"<RawStatement>::finalize","value":"fn (mut self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":134860,"byte_end":134870,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"get_status","qualname":"<RawStatement>::get_status","value":"fn (&self, status: StatementStatus, reset: bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":135064,"byte_end":135072,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"has_tail","qualname":"<RawStatement>::has_tail","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135479,"byte_end":135483,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Rows","qualname":"::row::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" An handle for the resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An handle for the resulting rows of a query.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135419,"byte_end":135467,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136410,"byte_end":136414,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"next","qualname":"<Rows>::next","value":"fn (&mut self) -> Result<Option<&Row<'stmt>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get the next row from the query. Returns `Ok(Some(Row))` if\n there is another row, `Err(...)` if there was an error\n getting the next row, and `Ok(None)` if all rows have been retrieved.","sig":null,"attributes":[{"value":"/ Attempt to get the next row from the query. Returns `Ok(Some(Row))` if","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135725,"byte_end":135799,"line_start":21,"line_end":21,"column_start":5,"column_end":79}},{"value":"/ there is another row, `Err(...)` if there was an error","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135804,"byte_end":135862,"line_start":22,"line_end":22,"column_start":5,"column_end":63}},{"value":"/ getting the next row, and `Ok(None)` if all rows have been retrieved.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135867,"byte_end":135940,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135945,"byte_end":135948,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135953,"byte_end":135964,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135969,"byte_end":135972,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This interface is not compatible with Rust's `Iterator` trait, because","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135977,"byte_end":136051,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ the lifetime of the returned row is tied to the lifetime of `self`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136056,"byte_end":136127,"line_start":28,"line_end":28,"column_start":5,"column_end":76}},{"value":"/ This is a fallible \"streaming iterator\". For a more natural interface,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136132,"byte_end":136206,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ consider using `query_map` or `query_and_then` instead, which","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136211,"byte_end":136276,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/ return types that implement `Iterator`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136281,"byte_end":136324,"line_start":31,"line_end":31,"column_start":5,"column_end":48}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136329,"byte_end":136369,"line_start":32,"line_end":32,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136528,"byte_end":136531,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"map","qualname":"<Rows>::map","value":"fn <F, B> (self, f: F) -> Map<'stmt, F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136774,"byte_end":136780,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"mapped","qualname":"<Rows>::mapped","value":"fn <F, B> (self, f: F) -> MappedRows<'stmt, F>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`MappedRows`], which\n implements `Iterator`.\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`MappedRows`], which","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136665,"byte_end":136731,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/ implements `Iterator`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136736,"byte_end":136762,"line_start":46,"line_end":46,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137117,"byte_end":137125,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"and_then","qualname":"<Rows>::and_then","value":"fn <F, T, E> (self, f: F) -> AndThenRows<'stmt, F>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows` with a fallible function, converting it to a\n [`AndThenRows`], which implements `Iterator` (instead of\n `FallibleStreamingIterator`).\n","sig":null,"attributes":[{"value":"/ Map over this `Rows` with a fallible function, converting it to a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":136933,"byte_end":137002,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/ [`AndThenRows`], which implements `Iterator` (instead of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137007,"byte_end":137067,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/ `FallibleStreamingIterator`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137072,"byte_end":137105,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137763,"byte_end":137766,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"Map","qualname":"::row::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138193,"byte_end":138203,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"MappedRows","qualname":"::row::MappedRows","value":"MappedRows {  }","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138123,"byte_end":138181,"line_start":107,"line_end":107,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138906,"byte_end":138917,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"AndThenRows","qualname":"::row::AndThenRows","value":"AndThenRows {  }","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query, with an Error type\n unifying with Error.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query, with an Error type","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138792,"byte_end":138869,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/ unifying with Error.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138870,"byte_end":138894,"line_start":138,"line_end":138,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":439},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140465,"byte_end":140468,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" A single result row of a query.\n","sig":null,"attributes":[{"value":"/ A single result row of a query.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140418,"byte_end":140453,"line_start":203,"line_end":203,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141025,"byte_end":141035,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"get_unwrap","qualname":"<Row>::get_unwrap","value":"fn <I, T> (&self, idx: I) -> T","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140556,"byte_end":140615,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140620,"byte_end":140623,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140628,"byte_end":140642,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140647,"byte_end":140650,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Panics if calling `row.get(idx)` would return an error,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140655,"byte_end":140714,"line_start":213,"line_end":213,"column_start":5,"column_end":64}},{"value":"/ including:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140719,"byte_end":140733,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140738,"byte_end":140741,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * If the underlying SQLite column type is not a valid type as a source","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140746,"byte_end":140820,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/   for `T`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140825,"byte_end":140838,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/ * If the underlying SQLite integral value is outside the range","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140843,"byte_end":140909,"line_start":218,"line_end":218,"column_start":5,"column_end":71}},{"value":"/   representable by `T`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140914,"byte_end":140940,"line_start":219,"line_end":219,"column_start":5,"column_end":31}},{"value":"/ * If `idx` is outside the range of columns in the returned query","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140945,"byte_end":141013,"line_start":220,"line_end":220,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141831,"byte_end":141834,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"get","qualname":"<Row>::get","value":"fn <I, T> (&self, idx: I) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141125,"byte_end":141184,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141189,"byte_end":141192,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141197,"byte_end":141211,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141216,"byte_end":141219,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnType` if the underlying SQLite column","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141224,"byte_end":141297,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ type is not a valid type as a source for `T`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141302,"byte_end":141351,"line_start":230,"line_end":230,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141356,"byte_end":141359,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141364,"byte_end":141436,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141441,"byte_end":141471,"line_start":233,"line_end":233,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141476,"byte_end":141479,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141484,"byte_end":141556,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141561,"byte_end":141583,"line_start":236,"line_end":236,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141588,"byte_end":141591,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ If the result type is i128 (which requires the `i128_blob` feature to be","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141596,"byte_end":141672,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ enabled), and the underlying SQLite column is a blob whose size is not","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141677,"byte_end":141751,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ 16 bytes, `Error::InvalidColumnType` will also be returned.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":141756,"byte_end":141819,"line_start":240,"line_end":240,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143652,"byte_end":143667,"line_start":284,"line_end":284,"column_start":12,"column_end":27},"name":"get_raw_checked","qualname":"<Row>::get_raw_checked","value":"fn <I> (&self, idx: I) -> Result<ValueRef<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":142967,"byte_end":143042,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143047,"byte_end":143105,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143110,"byte_end":143113,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143118,"byte_end":143193,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143198,"byte_end":143270,"line_start":273,"line_end":273,"column_start":5,"column_end":77}},{"value":"/ it can be somewhat difficult to use, and most callers will be better","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143275,"byte_end":143347,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ served by `get` or `get`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143352,"byte_end":143381,"line_start":275,"line_end":275,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143386,"byte_end":143389,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143394,"byte_end":143408,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143413,"byte_end":143416,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143421,"byte_end":143493,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143498,"byte_end":143528,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143533,"byte_end":143536,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143541,"byte_end":143613,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":143618,"byte_end":143640,"line_start":283,"line_end":283,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144727,"byte_end":144734,"line_start":308,"line_end":308,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<Row>::get_raw","value":"fn <I> (&self, idx: I) -> ValueRef<'_>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144038,"byte_end":144113,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144118,"byte_end":144176,"line_start":294,"line_end":294,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144181,"byte_end":144184,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144189,"byte_end":144264,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144269,"byte_end":144341,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ it can be difficult to use, and most callers will be better served by","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144346,"byte_end":144419,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ `get` or `get`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144424,"byte_end":144443,"line_start":299,"line_end":299,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144448,"byte_end":144451,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144456,"byte_end":144470,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144475,"byte_end":144478,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Panics if calling `row.get_raw_checked(idx)` would return an error,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144483,"byte_end":144554,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ including:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144559,"byte_end":144573,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144578,"byte_end":144581,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ * If `idx` is outside the range of columns in the returned query.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144586,"byte_end":144655,"line_start":306,"line_end":306,"column_start":5,"column_end":74}},{"value":"/ * If `idx` is not a valid column name for this row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144660,"byte_end":144715,"line_start":307,"line_end":307,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":455},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144914,"byte_end":144922,"line_start":314,"line_end":314,"column_start":11,"column_end":19},"name":"RowIndex","qualname":"::row::RowIndex","value":"RowIndex","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" A trait implemented by types that can index into columns of a row.\n","sig":null,"attributes":[{"value":"/ A trait implemented by types that can index into columns of a row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144833,"byte_end":144903,"line_start":313,"line_end":313,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":145029,"byte_end":145032,"line_start":317,"line_end":317,"column_start":8,"column_end":11},"name":"idx","qualname":"::row::RowIndex::idx","value":"fn (&self, stmt: &Statement<'_>) -> Result<usize>","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":" Returns the index of the appropriate column, or `None` if no such\n column exists.\n","sig":null,"attributes":[{"value":"/ Returns the index of the appropriate column, or `None` if no such","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":144929,"byte_end":144998,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ column exists.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":145003,"byte_end":145021,"line_start":316,"line_end":316,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":145975,"byte_end":145984,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Statement","qualname":"::statement::Statement","value":"Statement {  }","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" A prepared statement.\n","sig":null,"attributes":[{"value":"/ A prepared statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":145938,"byte_end":145963,"line_start":17,"line_end":17,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146865,"byte_end":146872,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"execute","qualname":"<Statement>::execute","value":"fn <P> (&mut self, params: P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement.","sig":null,"attributes":[{"value":"/ Execute the prepared statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146086,"byte_end":146121,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146126,"byte_end":146129,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146134,"byte_end":146209,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146214,"byte_end":146250,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146255,"byte_end":146258,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146263,"byte_end":146277,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146282,"byte_end":146285,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146290,"byte_end":146308,"line_start":31,"line_end":31,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146313,"byte_end":146354,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146359,"byte_end":146412,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/     let mut stmt = conn.prepare(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146417,"byte_end":146498,"line_start":34,"line_end":34,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146503,"byte_end":146506,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/     stmt.execute(&[1i32])?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146511,"byte_end":146542,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/     stmt.execute(&[2i32])?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146547,"byte_end":146578,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146583,"byte_end":146586,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146591,"byte_end":146605,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146610,"byte_end":146615,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146620,"byte_end":146627,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146632,"byte_end":146635,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146640,"byte_end":146653,"line_start":43,"line_end":43,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146658,"byte_end":146661,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146666,"byte_end":146739,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146744,"byte_end":146815,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146820,"byte_end":146853,"line_start":47,"line_end":47,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148534,"byte_end":148547,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Statement>::execute_named","value":"fn (&mut self, params: &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s). If any\n parameters that were in the prepared statement are not included in\n `params`, they will continue to use the most-recently bound value\n from a previous call to `execute_named`, or `NULL` if they have\n never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s). If any","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147075,"byte_end":147141,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ parameters that were in the prepared statement are not included in","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147146,"byte_end":147216,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ `params`, they will continue to use the most-recently bound value","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147221,"byte_end":147290,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ from a previous call to `execute_named`, or `NULL` if they have","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147295,"byte_end":147362,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/ never been bound.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147367,"byte_end":147388,"line_start":61,"line_end":61,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147393,"byte_end":147396,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147401,"byte_end":147476,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147481,"byte_end":147517,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147522,"byte_end":147525,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147530,"byte_end":147544,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147549,"byte_end":147552,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147557,"byte_end":147575,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147580,"byte_end":147621,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147626,"byte_end":147677,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (name) VALUES (:name)\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147682,"byte_end":147761,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/     stmt.execute_named(&[(\":name\", &\"one\")])","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147766,"byte_end":147814,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147819,"byte_end":147824,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147829,"byte_end":147836,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147841,"byte_end":147844,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params` macro is provided for syntactic convenience,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147849,"byte_end":147922,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147927,"byte_end":147981,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147986,"byte_end":147989,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":147994,"byte_end":148012,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148017,"byte_end":148072,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148077,"byte_end":148128,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (name) VALUES (:name)\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148133,"byte_end":148212,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/     stmt.execute_named(named_params!{\":name\": \"one\"})","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148217,"byte_end":148274,"line_start":83,"line_end":83,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148279,"byte_end":148284,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148289,"byte_end":148296,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148301,"byte_end":148304,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148309,"byte_end":148322,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148327,"byte_end":148330,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148335,"byte_end":148408,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148413,"byte_end":148484,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148489,"byte_end":148522,"line_start":91,"line_end":91,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149238,"byte_end":149244,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"insert","qualname":"<Statement>::insert","value":"fn <P> (&mut self, params: P) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Execute an INSERT and return the ROWID.","sig":null,"attributes":[{"value":"/ Execute an INSERT and return the ROWID.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148710,"byte_end":148753,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148758,"byte_end":148761,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148766,"byte_end":148776,"line_start":99,"line_end":99,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148781,"byte_end":148784,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around `execute()` intended for","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148789,"byte_end":148863,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ queries that insert a single item. It is possible to misuse this","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148868,"byte_end":148936,"line_start":102,"line_end":102,"column_start":5,"column_end":73}},{"value":"/ function in a way that it cannot detect, such as by calling it on a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":148941,"byte_end":149012,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ statement which _updates_ a single","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149017,"byte_end":149055,"line_start":104,"line_end":104,"column_start":5,"column_end":43}},{"value":"/ item rather than inserting one. Please don't do that.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149060,"byte_end":149117,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149122,"byte_end":149125,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149130,"byte_end":149143,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149148,"byte_end":149151,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if no row is inserted or many rows are inserted.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149156,"byte_end":149226,"line_start":109,"line_end":109,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150445,"byte_end":150450,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"query","qualname":"<Statement>::query","value":"fn <P> (&mut self, params: P) -> Result<Rows<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement, returning a handle to the resulting\n rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement, returning a handle to the resulting","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149552,"byte_end":149623,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ rows.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149628,"byte_end":149637,"line_start":123,"line_end":123,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149642,"byte_end":149645,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Due to lifetime restricts, the rows handle returned by `query` does not","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149650,"byte_end":149725,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ implement the `Iterator` trait. Consider using `query_map` or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149730,"byte_end":149795,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/ `query_and_then` instead, which do.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149800,"byte_end":149839,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149844,"byte_end":149847,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149852,"byte_end":149866,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149871,"byte_end":149874,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149879,"byte_end":149897,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, NO_PARAMS};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149902,"byte_end":149954,"line_start":132,"line_end":132,"column_start":5,"column_end":57}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":149959,"byte_end":150019,"line_start":133,"line_end":133,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150024,"byte_end":150088,"line_start":134,"line_end":134,"column_start":5,"column_end":69}},{"value":"/     let mut rows = stmt.query(NO_PARAMS)?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150093,"byte_end":150139,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150144,"byte_end":150147,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150152,"byte_end":150187,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150192,"byte_end":150236,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/         names.push(row.get(0)?);","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150241,"byte_end":150277,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150282,"byte_end":150291,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150296,"byte_end":150299,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150304,"byte_end":150321,"line_start":142,"line_end":142,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150326,"byte_end":150331,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150336,"byte_end":150343,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150348,"byte_end":150351,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150356,"byte_end":150370,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150375,"byte_end":150378,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150383,"byte_end":150433,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152138,"byte_end":152149,"line_start":197,"line_end":197,"column_start":12,"column_end":23},"name":"query_named","qualname":"<Statement>::query_named","value":"fn (&mut self, params: &[(&str, &dyn ToSql)]) -> Result<Rows<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning a\n handle for the resulting rows. If any parameters that were in the\n prepared statement are not included in `params`, they will continue\n to use the most-recently bound value from a previous\n call to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150671,"byte_end":150742,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ handle for the resulting rows. If any parameters that were in the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150747,"byte_end":150816,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ prepared statement are not included in `params`, they will continue","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150821,"byte_end":150892,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ to use the most-recently bound value from a previous","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150897,"byte_end":150953,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ call to `query_named`, or `NULL` if they have never been bound.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":150958,"byte_end":151025,"line_start":163,"line_end":163,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151030,"byte_end":151033,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151038,"byte_end":151052,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151057,"byte_end":151060,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151065,"byte_end":151083,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151088,"byte_end":151129,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151134,"byte_end":151181,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151186,"byte_end":151264,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query_named(&[(\":name\", &\"one\")])?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151269,"byte_end":151332,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151337,"byte_end":151381,"line_start":172,"line_end":172,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151386,"byte_end":151404,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151409,"byte_end":151418,"line_start":174,"line_end":174,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151423,"byte_end":151437,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151442,"byte_end":151447,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151452,"byte_end":151459,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151464,"byte_end":151467,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params!` macro is provided for syntactic convenience,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151472,"byte_end":151546,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151551,"byte_end":151605,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151610,"byte_end":151613,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151618,"byte_end":151636,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151641,"byte_end":151696,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151701,"byte_end":151748,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151753,"byte_end":151831,"line_start":185,"line_end":185,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query_named(named_params!{ \":name\": \"one\" })?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151836,"byte_end":151910,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151915,"byte_end":151959,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151964,"byte_end":151982,"line_start":188,"line_end":188,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":151987,"byte_end":151996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152001,"byte_end":152015,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152020,"byte_end":152025,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152030,"byte_end":152037,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152042,"byte_end":152045,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152050,"byte_end":152063,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152068,"byte_end":152071,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152076,"byte_end":152126,"line_start":196,"line_end":196,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153088,"byte_end":153097,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"query_map","qualname":"<Statement>::query_map","value":"fn <T, P, F> (&mut self, params: P, f: F) -> Result<MappedRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, returning an iterator over the mapped function results.","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152330,"byte_end":152404,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ rows, returning an iterator over the mapped function results.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152409,"byte_end":152474,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152479,"byte_end":152482,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152487,"byte_end":152501,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152506,"byte_end":152509,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152514,"byte_end":152532,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, NO_PARAMS};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152537,"byte_end":152589,"line_start":209,"line_end":209,"column_start":5,"column_end":57}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152594,"byte_end":152654,"line_start":210,"line_end":210,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152659,"byte_end":152723,"line_start":211,"line_end":211,"column_start":5,"column_end":69}},{"value":"/     let rows = stmt.query_map(NO_PARAMS, |row| row.get(0))?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152728,"byte_end":152792,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152797,"byte_end":152800,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152805,"byte_end":152840,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152845,"byte_end":152878,"line_start":215,"line_end":215,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152883,"byte_end":152920,"line_start":216,"line_end":216,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152925,"byte_end":152934,"line_start":217,"line_end":217,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152939,"byte_end":152942,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152947,"byte_end":152964,"line_start":219,"line_end":219,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152969,"byte_end":152974,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152979,"byte_end":152986,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152991,"byte_end":152994,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":152999,"byte_end":153013,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153018,"byte_end":153021,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153026,"byte_end":153076,"line_start":225,"line_end":225,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154403,"byte_end":154418,"line_start":263,"line_end":263,"column_start":12,"column_end":27},"name":"query_map_named","qualname":"<Statement>::query_map_named","value":"fn <T, F> (&mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<MappedRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in `params`, they will continue to use the\n most-recently bound value from a previous call to `query_named`,\n or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153358,"byte_end":153430,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153435,"byte_end":153504,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/ query's rows. If any parameters that were in the prepared statement","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153509,"byte_end":153580,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ are not included in `params`, they will continue to use the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153585,"byte_end":153648,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/ most-recently bound value from a previous call to `query_named`,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153653,"byte_end":153721,"line_start":240,"line_end":240,"column_start":5,"column_end":73}},{"value":"/ or `NULL` if they have never been bound.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153726,"byte_end":153770,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153775,"byte_end":153778,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153783,"byte_end":153797,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153802,"byte_end":153805,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153810,"byte_end":153828,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153833,"byte_end":153874,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153879,"byte_end":153939,"line_start":247,"line_end":247,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":153944,"byte_end":154023,"line_start":248,"line_end":248,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_map_named(&[(\":id\", &\"one\")], |row| row.get(0))?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154028,"byte_end":154107,"line_start":249,"line_end":249,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154112,"byte_end":154115,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154120,"byte_end":154155,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154160,"byte_end":154193,"line_start":252,"line_end":252,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154198,"byte_end":154235,"line_start":253,"line_end":253,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154240,"byte_end":154249,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154254,"byte_end":154257,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154262,"byte_end":154279,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154284,"byte_end":154289,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154294,"byte_end":154301,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154306,"byte_end":154309,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154314,"byte_end":154328,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154333,"byte_end":154336,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154341,"byte_end":154391,"line_start":262,"line_end":262,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155006,"byte_end":155020,"line_start":282,"line_end":282,"column_start":12,"column_end":26},"name":"query_and_then","qualname":"<Statement>::query_and_then","value":"fn <T, E, P, F> (&mut self, params: P, f: F) -> Result<AndThenRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, where the function returns a `Result` with `Error` type\n implementing `std::convert::From<Error>` (so errors can be unified).","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154684,"byte_end":154758,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ rows, where the function returns a `Result` with `Error` type","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154763,"byte_end":154828,"line_start":276,"line_end":276,"column_start":5,"column_end":70}},{"value":"/ implementing `std::convert::From<Error>` (so errors can be unified).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154833,"byte_end":154905,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154910,"byte_end":154913,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154918,"byte_end":154931,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154936,"byte_end":154939,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":154944,"byte_end":154994,"line_start":281,"line_end":281,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156648,"byte_end":156668,"line_start":331,"line_end":331,"column_start":12,"column_end":32},"name":"query_and_then_named","qualname":"<Statement>::query_and_then_named","value":"fn <T, E, F> (&mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<AndThenRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in\n `params`, they will\n continue to use the most-recently bound value from a previous call\n to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155322,"byte_end":155394,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155399,"byte_end":155468,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ query's rows. If any parameters that were in the prepared statement","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155473,"byte_end":155544,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ are not included in","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155549,"byte_end":155572,"line_start":296,"line_end":296,"column_start":5,"column_end":28}},{"value":"/ `params`, they will","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155577,"byte_end":155600,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/ continue to use the most-recently bound value from a previous call","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155605,"byte_end":155675,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/ to `query_named`, or `NULL` if they have never been bound.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155680,"byte_end":155742,"line_start":299,"line_end":299,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155747,"byte_end":155750,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155755,"byte_end":155769,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155774,"byte_end":155777,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155782,"byte_end":155800,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155805,"byte_end":155846,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ struct Person {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155851,"byte_end":155870,"line_start":305,"line_end":305,"column_start":5,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155875,"byte_end":155896,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155901,"byte_end":155907,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155912,"byte_end":155915,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ fn name_to_person(name: String) -> Result<Person> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155920,"byte_end":155975,"line_start":309,"line_end":309,"column_start":5,"column_end":60}},{"value":"/     // ... check for valid name","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":155980,"byte_end":156015,"line_start":310,"line_end":310,"column_start":5,"column_end":40}},{"value":"/     Ok(Person { name: name })","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156020,"byte_end":156053,"line_start":311,"line_end":311,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156058,"byte_end":156063,"line_start":312,"line_end":312,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156068,"byte_end":156071,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<Person>> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156076,"byte_end":156136,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156141,"byte_end":156220,"line_start":315,"line_end":315,"column_start":5,"column_end":84}},{"value":"/     let rows =","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156225,"byte_end":156243,"line_start":316,"line_end":316,"column_start":5,"column_end":23}},{"value":"/         stmt.query_and_then_named(&[(\":id\", &\"one\")], |row| name_to_person(row.get(0)?))?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156248,"byte_end":156342,"line_start":317,"line_end":317,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156347,"byte_end":156350,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156355,"byte_end":156392,"line_start":319,"line_end":319,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156397,"byte_end":156432,"line_start":320,"line_end":320,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156437,"byte_end":156478,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156483,"byte_end":156492,"line_start":322,"line_end":322,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156497,"byte_end":156500,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156505,"byte_end":156524,"line_start":324,"line_end":324,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156529,"byte_end":156534,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156539,"byte_end":156546,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156551,"byte_end":156554,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156559,"byte_end":156573,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156578,"byte_end":156581,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156586,"byte_end":156636,"line_start":330,"line_end":330,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157126,"byte_end":157132,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"exists","qualname":"<Statement>::exists","value":"fn <P> (&mut self, params: P) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a query in the SQL statement it executes returns one\n or more rows and `false` if the SQL returns an empty set.\n","sig":null,"attributes":[{"value":"/ Return `true` if a query in the SQL statement it executes returns one","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":156975,"byte_end":157048,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ or more rows and `false` if the SQL returns an empty set.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157053,"byte_end":157114,"line_start":345,"line_end":345,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157866,"byte_end":157875,"line_start":369,"line_end":369,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Statement>::query_row","value":"fn <T, P, F> (&mut self, params: P, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157358,"byte_end":157428,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157433,"byte_end":157448,"line_start":357,"line_end":357,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157453,"byte_end":157456,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157461,"byte_end":157534,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157539,"byte_end":157551,"line_start":360,"line_end":360,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157556,"byte_end":157559,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157564,"byte_end":157637,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157642,"byte_end":157714,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157719,"byte_end":157757,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157762,"byte_end":157765,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157770,"byte_end":157783,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157788,"byte_end":157791,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":157796,"byte_end":157854,"line_start":368,"line_end":368,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158738,"byte_end":158753,"line_start":394,"line_end":394,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Statement>::query_row_named","value":"fn <T, F> (&mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158141,"byte_end":158214,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158219,"byte_end":158255,"line_start":381,"line_end":381,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158260,"byte_end":158263,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158268,"byte_end":158341,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158346,"byte_end":158358,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158363,"byte_end":158366,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158371,"byte_end":158444,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158449,"byte_end":158521,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158526,"byte_end":158564,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158569,"byte_end":158572,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158577,"byte_end":158590,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158595,"byte_end":158598,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158603,"byte_end":158678,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158683,"byte_end":158726,"line_start":393,"line_end":393,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159256,"byte_end":159264,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Statement>::finalize","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the statement.","sig":null,"attributes":[{"value":"/ Consumes the statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":158993,"byte_end":159020,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159025,"byte_end":159028,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159033,"byte_end":159101,"line_start":405,"line_end":405,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159106,"byte_end":159147,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159152,"byte_end":159155,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159160,"byte_end":159173,"line_start":408,"line_end":408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159178,"byte_end":159181,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159186,"byte_end":159244,"line_start":410,"line_end":410,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":160070,"byte_end":160085,"line_start":434,"line_end":434,"column_start":12,"column_end":27},"name":"parameter_index","qualname":"<Statement>::parameter_index","value":"fn (&self, name: &str) -> Result<Option<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the (one-based) index of an SQL parameter given its name.","sig":null,"attributes":[{"value":"/ Return the (one-based) index of an SQL parameter given its name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159327,"byte_end":159396,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159401,"byte_end":159404,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Note that the initial \":\" or \"$\" or \"@\" or \"?\" used to specify the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159409,"byte_end":159479,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ parameter is included as part of the name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159484,"byte_end":159530,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159535,"byte_end":159538,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159543,"byte_end":159561,"line_start":420,"line_end":420,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159566,"byte_end":159607,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159612,"byte_end":159661,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159666,"byte_end":159743,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_index(\":example\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159748,"byte_end":159802,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(index, Some(1));","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159807,"byte_end":159842,"line_start":425,"line_end":425,"column_start":5,"column_end":40}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159847,"byte_end":159861,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159866,"byte_end":159871,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159876,"byte_end":159883,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159888,"byte_end":159891,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159896,"byte_end":159909,"line_start":430,"line_end":430,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159914,"byte_end":159917,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Will return Err if `name` is invalid. Will return Ok(None) if the name","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":159922,"byte_end":159996,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ is valid but not a bound parameter of this statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":160001,"byte_end":160058,"line_start":433,"line_end":433,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161241,"byte_end":161256,"line_start":471,"line_end":471,"column_start":12,"column_end":27},"name":"parameter_count","qualname":"<Statement>::parameter_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of parameters that can be bound to this statement.\n","sig":null,"attributes":[{"value":"/ Return the number of parameters that can be bound to this statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161157,"byte_end":161229,"line_start":470,"line_end":470,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162902,"byte_end":162920,"line_start":513,"line_end":513,"column_start":12,"column_end":30},"name":"raw_bind_parameter","qualname":"<Statement>::raw_bind_parameter","value":"fn <T> (&mut self, one_based_col_index: usize, param: T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to directly bind a parameter to a given index.","sig":null,"attributes":[{"value":"/ Low level API to directly bind a parameter to a given index.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161327,"byte_end":161391,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161396,"byte_end":161399,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Note that the index is one-based, that is, the first parameter index is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161404,"byte_end":161480,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ 1 and not 0. This is consistent with the SQLite API and the values given","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161485,"byte_end":161561,"line_start":478,"line_end":478,"column_start":5,"column_end":81}},{"value":"/ to parameters bound as `?NNN`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161566,"byte_end":161600,"line_start":479,"line_end":479,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161605,"byte_end":161608,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ The valid values for `one_based_col_index` begin at `1`, and end at","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161613,"byte_end":161684,"line_start":481,"line_end":481,"column_start":5,"column_end":76}},{"value":"/ [`Statement::parameter_count`], inclusive.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161689,"byte_end":161735,"line_start":482,"line_end":482,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161740,"byte_end":161743,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161748,"byte_end":161761,"line_start":484,"line_end":484,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161766,"byte_end":161769,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used, but is available for special cases","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161774,"byte_end":161847,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ such as:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161852,"byte_end":161864,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161869,"byte_end":161872,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ - binding parameters where a gap exists.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161877,"byte_end":161921,"line_start":489,"line_end":489,"column_start":5,"column_end":49}},{"value":"/ - binding named and positional parameters in the same query.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161926,"byte_end":161990,"line_start":490,"line_end":490,"column_start":5,"column_end":69}},{"value":"/ - separating parameter binding from query execution.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":161995,"byte_end":162051,"line_start":491,"line_end":491,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162056,"byte_end":162059,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Statements that have had their parameters bound this way should be","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162064,"byte_end":162134,"line_start":493,"line_end":493,"column_start":5,"column_end":75}},{"value":"/ queried or executed by [`Statement::raw_query`] or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162139,"byte_end":162193,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/ [`Statement::raw_execute`]. Other functions are not guaranteed to work.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162198,"byte_end":162273,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162278,"byte_end":162281,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162286,"byte_end":162299,"line_start":497,"line_end":497,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162304,"byte_end":162307,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162312,"byte_end":162330,"line_start":499,"line_end":499,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162335,"byte_end":162376,"line_start":500,"line_end":500,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162381,"byte_end":162428,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test WHERE name = :name AND value > ?2\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162433,"byte_end":162526,"line_start":502,"line_end":502,"column_start":5,"column_end":98}},{"value":"/     let name_index = stmt.parameter_index(\":name\")?.expect(\"No such parameter\");","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162531,"byte_end":162615,"line_start":503,"line_end":503,"column_start":5,"column_end":89}},{"value":"/     stmt.raw_bind_parameter(name_index, \"foo\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162620,"byte_end":162672,"line_start":504,"line_end":504,"column_start":5,"column_end":57}},{"value":"/     stmt.raw_bind_parameter(2, 100)?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162677,"byte_end":162718,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/     let mut rows = stmt.raw_query();","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162723,"byte_end":162763,"line_start":506,"line_end":506,"column_start":5,"column_end":45}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162768,"byte_end":162812,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162817,"byte_end":162835,"line_start":508,"line_end":508,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162840,"byte_end":162849,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162854,"byte_end":162868,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162873,"byte_end":162878,"line_start":511,"line_end":511,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":162883,"byte_end":162890,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163817,"byte_end":163828,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"name":"raw_execute","qualname":"<Statement>::raw_execute","value":"fn (&mut self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to execute a statement given that all parameters were\n bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to execute a statement given that all parameters were","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163215,"byte_end":163286,"line_start":523,"line_end":523,"column_start":5,"column_end":76}},{"value":"/ bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163291,"byte_end":163359,"line_start":524,"line_end":524,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163364,"byte_end":163367,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163372,"byte_end":163385,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163390,"byte_end":163393,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163398,"byte_end":163457,"line_start":528,"line_end":528,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163462,"byte_end":163465,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163470,"byte_end":163537,"line_start":530,"line_end":530,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::execute`] family should be preferred.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163542,"byte_end":163613,"line_start":531,"line_end":531,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163618,"byte_end":163621,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163626,"byte_end":163639,"line_start":533,"line_end":533,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163644,"byte_end":163647,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the executed statement returns rows (in which case","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163652,"byte_end":163727,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ `query` should be used instead), or the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163732,"byte_end":163805,"line_start":536,"line_end":536,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164450,"byte_end":164459,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"raw_query","qualname":"<Statement>::raw_query","value":"fn (&mut self) -> Rows<'_>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to get `Rows` for this query given that all parameters\n were bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to get `Rows` for this query given that all parameters","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163915,"byte_end":163987,"line_start":541,"line_end":541,"column_start":5,"column_end":77}},{"value":"/ were bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":163992,"byte_end":164065,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164070,"byte_end":164073,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164078,"byte_end":164091,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164096,"byte_end":164099,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164104,"byte_end":164163,"line_start":546,"line_end":546,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164168,"byte_end":164171,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164176,"byte_end":164243,"line_start":548,"line_end":548,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::query`] family should be preferred.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164248,"byte_end":164317,"line_start":549,"line_end":549,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164322,"byte_end":164325,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Note that if the SQL does not return results, [`Statement::raw_execute`]","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164330,"byte_end":164406,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ should be used instead.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":164411,"byte_end":164438,"line_start":552,"line_end":552,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":168721,"byte_end":168731,"line_start":677,"line_end":677,"column_start":12,"column_end":22},"name":"get_status","qualname":"<Statement>::get_status","value":"fn (&self, status: StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the value for one of the status counters for this statement.\n","sig":null,"attributes":[{"value":"/ Get the value for one of the status counters for this statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":168641,"byte_end":168709,"line_start":676,"line_end":676,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":168962,"byte_end":168974,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"reset_status","qualname":"<Statement>::reset_status","value":"fn (&self, status: StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Reset the value of one of the status counters for this statement,\n returning the value it had before resetting.\n","sig":null,"attributes":[{"value":"/ Reset the value of one of the status counters for this statement,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":168828,"byte_end":168897,"line_start":681,"line_end":681,"column_start":5,"column_end":74}},{"value":"/ returning the value it had before resetting.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":168902,"byte_end":168950,"line_start":682,"line_end":682,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173404,"byte_end":173416,"line_start":819,"line_end":819,"column_start":5,"column_end":17},"name":"FullscanStep","qualname":"::statement::StatementStatus::FullscanStep","value":"StatementStatus::FullscanStep","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173350,"byte_end":173399,"line_start":818,"line_end":818,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173471,"byte_end":173475,"line_start":821,"line_end":821,"column_start":5,"column_end":9},"name":"Sort","qualname":"::statement::StatementStatus::Sort","value":"StatementStatus::Sort","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_SORT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_SORT","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173426,"byte_end":173466,"line_start":820,"line_end":820,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173535,"byte_end":173544,"line_start":823,"line_end":823,"column_start":5,"column_end":14},"name":"AutoIndex","qualname":"::statement::StatementStatus::AutoIndex","value":"StatementStatus::AutoIndex","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_AUTOINDEX\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_AUTOINDEX","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173485,"byte_end":173530,"line_start":822,"line_end":822,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173602,"byte_end":173608,"line_start":825,"line_end":825,"column_start":5,"column_end":11},"name":"VmStep","qualname":"::statement::StatementStatus::VmStep","value":"StatementStatus::VmStep","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_VM_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_VM_STEP","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173554,"byte_end":173597,"line_start":824,"line_end":824,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173668,"byte_end":173677,"line_start":827,"line_end":827,"column_start":5,"column_end":14},"name":"RePrepare","qualname":"::statement::StatementStatus::RePrepare","value":"StatementStatus::RePrepare","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_REPREPARE\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_REPREPARE","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173618,"byte_end":173663,"line_start":826,"line_end":826,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173731,"byte_end":173734,"line_start":829,"line_end":829,"column_start":5,"column_end":8},"name":"Run","qualname":"::statement::StatementStatus::Run","value":"StatementStatus::Run","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_RUN\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_RUN","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173687,"byte_end":173726,"line_start":828,"line_end":828,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173792,"byte_end":173799,"line_start":831,"line_end":831,"column_start":5,"column_end":12},"name":"MemUsed","qualname":"::statement::StatementStatus::MemUsed","value":"StatementStatus::MemUsed","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_MEMUSED\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_MEMUSED","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173744,"byte_end":173787,"line_start":830,"line_end":830,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173328,"byte_end":173343,"line_start":817,"line_end":817,"column_start":10,"column_end":25},"name":"StatementStatus","qualname":"::statement::StatementStatus","value":"StatementStatus::{FullscanStep, Sort, AutoIndex, VmStep, RePrepare, Run, MemUsed}","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031}],"decl_id":null,"docs":" Prepared statement status counters.","sig":null,"attributes":[{"value":"/ Prepared statement status counters.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173019,"byte_end":173058,"line_start":807,"line_end":807,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173059,"byte_end":173062,"line_start":808,"line_end":808,"column_start":1,"column_end":4}},{"value":"/ See https://www.sqlite.org/c3ref/c_stmtstatus_counter.html","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173063,"byte_end":173125,"line_start":809,"line_end":809,"column_start":1,"column_end":63}},{"value":"/ for explanations of each.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173126,"byte_end":173155,"line_start":810,"line_end":810,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173156,"byte_end":173159,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ Note that depending on your version of SQLite, all of these","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173160,"byte_end":173223,"line_start":812,"line_end":812,"column_start":1,"column_end":64}},{"value":"/ may not be available.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173224,"byte_end":173249,"line_start":813,"line_end":813,"column_start":1,"column_end":26}},{"value":"repr(i32)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173250,"byte_end":173262,"line_start":814,"line_end":814,"column_start":1,"column_end":13}},{"value":"non_exhaustive","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":173301,"byte_end":173318,"line_start":816,"line_end":816,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187683,"byte_end":187691,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Deferred","qualname":"::transaction::TransactionBehavior::Deferred","value":"TransactionBehavior::Deferred","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187697,"byte_end":187706,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::transaction::TransactionBehavior::Immediate","value":"TransactionBehavior::Immediate","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187712,"byte_end":187721,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::transaction::TransactionBehavior::Exclusive","value":"TransactionBehavior::Exclusive","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187657,"byte_end":187676,"line_start":8,"line_end":8,"column_start":10,"column_end":29},"name":"TransactionBehavior","qualname":"::transaction::TransactionBehavior","value":"TransactionBehavior::{Deferred, Immediate, Exclusive}","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048}],"decl_id":null,"docs":" Options for transaction behavior. See [BEGIN\n TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.\n","sig":null,"attributes":[{"value":"/ Options for transaction behavior. See [BEGIN","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187483,"byte_end":187531,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/ TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187532,"byte_end":187606,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"non_exhaustive","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187630,"byte_end":187647,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187950,"byte_end":187958,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Rollback","qualname":"::transaction::DropBehavior::Rollback","value":"DropBehavior::Rollback","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Roll back the changes. This is the default.\n","sig":null,"attributes":[{"value":"/ Roll back the changes. This is the default.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187898,"byte_end":187945,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187993,"byte_end":187999,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Commit","qualname":"::transaction::DropBehavior::Commit","value":"DropBehavior::Commit","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Commit the changes.\n","sig":null,"attributes":[{"value":"/ Commit the changes.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187965,"byte_end":187988,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188139,"byte_end":188145,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::transaction::DropBehavior::Ignore","value":"DropBehavior::Ignore","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Do not commit or roll back changes - this will leave the transaction or\n savepoint open, so should be used with care.\n","sig":null,"attributes":[{"value":"/ Do not commit or roll back changes - this will leave the transaction or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188006,"byte_end":188081,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ savepoint open, so should be used with care.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188086,"byte_end":188134,"line_start":25,"line_end":25,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188224,"byte_end":188229,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Panic","qualname":"::transaction::DropBehavior::Panic","value":"DropBehavior::Panic","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Panic. Used to enforce intentional behavior during development.\n","sig":null,"attributes":[{"value":"/ Panic. Used to enforce intentional behavior during development.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188152,"byte_end":188219,"line_start":28,"line_end":28,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187879,"byte_end":187891,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"DropBehavior","qualname":"::transaction::DropBehavior","value":"DropBehavior::{Rollback, Commit, Ignore, Panic}","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060}],"decl_id":null,"docs":" Options for how a Transaction or Savepoint should behave when it is dropped.\n","sig":null,"attributes":[{"value":"/ Options for how a Transaction or Savepoint should behave when it is dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187726,"byte_end":187806,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"non_exhaustive","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":187852,"byte_end":187869,"line_start":16,"line_end":16,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189038,"byte_end":189049,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction {  }","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"decl_id":null,"docs":" Represents a transaction on a database connection.","sig":null,"attributes":[{"value":"/ Represents a transaction on a database connection.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188234,"byte_end":188288,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188289,"byte_end":188292,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188293,"byte_end":188304,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188305,"byte_end":188308,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Transactions will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188309,"byte_end":188386,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ commit the transaction, or use `set_drop_behavior` to change what happens","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188387,"byte_end":188464,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ when the transaction is dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188465,"byte_end":188501,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188502,"byte_end":188505,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188506,"byte_end":188520,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188521,"byte_end":188524,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188525,"byte_end":188543,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188544,"byte_end":188585,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188586,"byte_end":188657,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188658,"byte_end":188729,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188730,"byte_end":188791,"line_start":46,"line_end":46,"column_start":1,"column_end":62}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188792,"byte_end":188829,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188830,"byte_end":188833,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188834,"byte_end":188902,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188903,"byte_end":188971,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188972,"byte_end":188975,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     tx.commit()","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188976,"byte_end":188995,"line_start":52,"line_end":52,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":188996,"byte_end":189001,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189002,"byte_end":189009,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189901,"byte_end":189910,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"Savepoint","qualname":"::transaction::Savepoint","value":"Savepoint {  }","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"decl_id":null,"docs":" Represents a savepoint on a database connection.","sig":null,"attributes":[{"value":"/ Represents a savepoint on a database connection.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189124,"byte_end":189176,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189177,"byte_end":189180,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189181,"byte_end":189192,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189193,"byte_end":189196,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Savepoints will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189197,"byte_end":189272,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ commit the savepoint, or use `set_drop_behavior` to change what happens","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189273,"byte_end":189348,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ when the savepoint is dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189349,"byte_end":189383,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189384,"byte_end":189387,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189388,"byte_end":189402,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189403,"byte_end":189406,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189407,"byte_end":189425,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189426,"byte_end":189467,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189468,"byte_end":189539,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189540,"byte_end":189611,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189612,"byte_end":189673,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189674,"byte_end":189709,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189710,"byte_end":189713,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189714,"byte_end":189782,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189783,"byte_end":189851,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189852,"byte_end":189855,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     sp.commit()","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189856,"byte_end":189875,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189876,"byte_end":189881,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":189882,"byte_end":189889,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190422,"byte_end":190425,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Transaction>::new","value":"fn (conn: &mut Connection, behavior: TransactionBehavior) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction. Cannot be nested; see `savepoint` for nested\n transactions.","sig":null,"attributes":[{"value":"/ Begin a new transaction. Cannot be nested; see `savepoint` for nested","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190067,"byte_end":190140,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/ transactions.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190145,"byte_end":190162,"line_start":94,"line_end":94,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190167,"byte_end":190170,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Even though we don't mutate the connection, we take a `&mut Connection`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190175,"byte_end":190250,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ so as to prevent nested transactions on the same connection. For cases","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190255,"byte_end":190329,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ where this is unacceptable, [`Transaction::new_unchecked`] is available.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190334,"byte_end":190410,"line_start":98,"line_end":98,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190863,"byte_end":190876,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Transaction>::new_unchecked","value":"fn (conn: &Connection, behavior: TransactionBehavior) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction, failing if a transaction is open.","sig":null,"attributes":[{"value":"/ Begin a new transaction, failing if a transaction is open.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190564,"byte_end":190626,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190631,"byte_end":190634,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If a transaction is already open, this will return an error. Where","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190639,"byte_end":190709,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ possible, [`Transaction::new`] should be preferred, as it provides a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190714,"byte_end":190786,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ compile-time guarantee that transactions are not nested.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190791,"byte_end":190851,"line_start":107,"line_end":107,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192209,"byte_end":192218,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Transaction>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested\n transactions.","sig":null,"attributes":[{"value":"/ Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191372,"byte_end":191460,"line_start":123,"line_end":123,"column_start":5,"column_end":93}},{"value":"/ transactions.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191465,"byte_end":191482,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191487,"byte_end":191490,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191495,"byte_end":191506,"line_start":126,"line_end":126,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191511,"byte_end":191514,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Just like outer level transactions, savepoint transactions rollback by","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191519,"byte_end":191593,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ default.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191598,"byte_end":191610,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191615,"byte_end":191618,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191623,"byte_end":191637,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191642,"byte_end":191645,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191650,"byte_end":191668,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191673,"byte_end":191714,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ # fn perform_queries_part_1_succeeds(_conn: &Connection) -> bool { true }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191719,"byte_end":191796,"line_start":135,"line_end":135,"column_start":5,"column_end":82}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191801,"byte_end":191862,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/     let mut tx = conn.transaction()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191867,"byte_end":191908,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191913,"byte_end":191916,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/     {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191921,"byte_end":191930,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"/         let sp = tx.savepoint()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191935,"byte_end":191972,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"/         if perform_queries_part_1_succeeds(&sp) {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":191977,"byte_end":192030,"line_start":141,"line_end":141,"column_start":5,"column_end":58}},{"value":"/             sp.commit()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192035,"byte_end":192064,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192069,"byte_end":192082,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/         // otherwise, sp will rollback","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192087,"byte_end":192129,"line_start":144,"line_end":144,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192134,"byte_end":192143,"line_start":145,"line_end":145,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192148,"byte_end":192151,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192156,"byte_end":192175,"line_start":147,"line_end":147,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192180,"byte_end":192185,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192190,"byte_end":192197,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192399,"byte_end":192418,"line_start":155,"line_end":155,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Transaction>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new savepoint with a custom savepoint name. See `savepoint()`.\n","sig":null,"attributes":[{"value":"/ Create a new savepoint with a custom savepoint name. See `savepoint()`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192312,"byte_end":192387,"line_start":154,"line_end":154,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192656,"byte_end":192669,"line_start":161,"line_end":161,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Transaction>::drop_behavior","value":"fn (&self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the transaction when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the transaction when it is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192553,"byte_end":192627,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192632,"byte_end":192644,"line_start":160,"line_end":160,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192834,"byte_end":192851,"line_start":167,"line_end":167,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Transaction>::set_drop_behavior","value":"fn (&mut self, drop_behavior: DropBehavior) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the transaction to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the transaction to perform the specified action when it is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192733,"byte_end":192805,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192810,"byte_end":192822,"line_start":166,"line_end":166,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193026,"byte_end":193032,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"commit","qualname":"<Transaction>::commit","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a transaction.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":192948,"byte_end":193014,"line_start":171,"line_end":171,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193282,"byte_end":193290,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Transaction>::rollback","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and rolls back a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and rolls back a transaction.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193201,"byte_end":193270,"line_start":181,"line_end":181,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193724,"byte_end":193730,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"finish","qualname":"<Transaction>::finish","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the transaction, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the transaction, committing or rolling back according to the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193465,"byte_end":193538,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193543,"byte_end":193585,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193590,"byte_end":193593,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193598,"byte_end":193666,"line_start":194,"line_end":194,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":193671,"byte_end":193712,"line_start":195,"line_end":195,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195184,"byte_end":195187,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"new","qualname":"<Savepoint>::new","value":"fn (conn: &mut Connection) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint. Can be nested.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint. Can be nested.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195131,"byte_end":195172,"line_start":250,"line_end":250,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195362,"byte_end":195371,"line_start":256,"line_end":256,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Savepoint>::with_name","value":"fn <T> (conn: &mut Connection, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a user-provided savepoint name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195288,"byte_end":195350,"line_start":255,"line_end":255,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195554,"byte_end":195563,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Savepoint>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195513,"byte_end":195542,"line_start":260,"line_end":260,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195747,"byte_end":195766,"line_start":266,"line_end":266,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Savepoint>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint with a user-provided savepoint name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195670,"byte_end":195735,"line_start":265,"line_end":265,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196015,"byte_end":196028,"line_start":272,"line_end":272,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Savepoint>::drop_behavior","value":"fn (&self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the savepoint when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the savepoint when it is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195914,"byte_end":195986,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":195991,"byte_end":196003,"line_start":271,"line_end":271,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196191,"byte_end":196208,"line_start":278,"line_end":278,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Savepoint>::set_drop_behavior","value":"fn (&mut self, drop_behavior: DropBehavior) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the savepoint to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the savepoint to perform the specified action when it is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196092,"byte_end":196162,"line_start":276,"line_end":276,"column_start":5,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196167,"byte_end":196179,"line_start":277,"line_end":277,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196381,"byte_end":196387,"line_start":283,"line_end":283,"column_start":12,"column_end":18},"name":"commit","qualname":"<Savepoint>::commit","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a savepoint.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a savepoint.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196305,"byte_end":196369,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196851,"byte_end":196859,"line_start":299,"line_end":299,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Savepoint>::rollback","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which rolls back a savepoint.","sig":null,"attributes":[{"value":"/ A convenience method which rolls back a savepoint.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196612,"byte_end":196666,"line_start":293,"line_end":293,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196671,"byte_end":196674,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196679,"byte_end":196690,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196695,"byte_end":196698,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Unlike `Transaction`s, savepoints remain active after they have been","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196703,"byte_end":196775,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ rolled back, and can be rolled back again or committed.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196780,"byte_end":196839,"line_start":298,"line_end":298,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197239,"byte_end":197245,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"name":"finish","qualname":"<Savepoint>::finish","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the savepoint, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the savepoint, committing or rolling back according to the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":196982,"byte_end":197053,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197058,"byte_end":197100,"line_start":305,"line_end":305,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197105,"byte_end":197108,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197113,"byte_end":197181,"line_start":307,"line_end":307,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197186,"byte_end":197227,"line_start":308,"line_end":308,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198932,"byte_end":198943,"line_start":367,"line_end":367,"column_start":12,"column_end":23},"name":"transaction","qualname":"<Connection>::transaction","value":"fn (&mut self) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197985,"byte_end":198050,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198055,"byte_end":198058,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The transaction defaults to rolling back when it is dropped. If you","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198063,"byte_end":198134,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ want the transaction to commit, you must call `commit` or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198139,"byte_end":198200,"line_start":345,"line_end":345,"column_start":5,"column_end":66}},{"value":"/ `set_drop_behavior(DropBehavior::Commit)`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198205,"byte_end":198251,"line_start":346,"line_end":346,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198256,"byte_end":198259,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198264,"byte_end":198278,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198283,"byte_end":198286,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198291,"byte_end":198309,"line_start":350,"line_end":350,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198314,"byte_end":198355,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198360,"byte_end":198431,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198436,"byte_end":198507,"line_start":353,"line_end":353,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198512,"byte_end":198573,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198578,"byte_end":198615,"line_start":355,"line_end":355,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198620,"byte_end":198623,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198628,"byte_end":198696,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198701,"byte_end":198769,"line_start":358,"line_end":358,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198774,"byte_end":198777,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198782,"byte_end":198801,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198806,"byte_end":198811,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198816,"byte_end":198823,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198828,"byte_end":198831,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198836,"byte_end":198849,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198854,"byte_end":198857,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":198862,"byte_end":198920,"line_start":366,"line_end":366,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199255,"byte_end":199280,"line_start":378,"line_end":378,"column_start":12,"column_end":37},"name":"transaction_with_behavior","qualname":"<Connection>::transaction_with_behavior","value":"fn (&mut self, behavior: TransactionBehavior) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with a specified behavior.","sig":null,"attributes":[{"value":"/ Begin a new transaction with a specified behavior.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199057,"byte_end":199111,"line_start":371,"line_end":371,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199116,"byte_end":199119,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ See `transaction`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199124,"byte_end":199146,"line_start":373,"line_end":373,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199151,"byte_end":199154,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199159,"byte_end":199172,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199177,"byte_end":199180,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199185,"byte_end":199243,"line_start":377,"line_end":377,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200739,"byte_end":200760,"line_start":416,"line_end":416,"column_start":12,"column_end":33},"name":"unchecked_transaction","qualname":"<Connection>::unchecked_transaction","value":"fn (&self) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199427,"byte_end":199492,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199497,"byte_end":199500,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Attempt to open a nested transaction will result in a SQLite error.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199505,"byte_end":199576,"line_start":387,"line_end":387,"column_start":5,"column_end":76}},{"value":"/ `Connection::transaction` prevents this at compile time by taking `&mut","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199581,"byte_end":199656,"line_start":388,"line_end":388,"column_start":5,"column_end":80}},{"value":"/ self`, but `Connection::unchecked_transaction()` may be used to defer","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199661,"byte_end":199734,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ the checking until runtime.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199739,"byte_end":199770,"line_start":390,"line_end":390,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199775,"byte_end":199778,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ See [`Connection::transaction`] and [`Transaction::new_unchecked`]","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199783,"byte_end":199853,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ (which can be used if the default transaction behavior is undesirable).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199858,"byte_end":199933,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199938,"byte_end":199941,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199946,"byte_end":199960,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199965,"byte_end":199968,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199973,"byte_end":199991,"line_start":397,"line_end":397,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":199996,"byte_end":200037,"line_start":398,"line_end":398,"column_start":5,"column_end":46}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200042,"byte_end":200064,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200069,"byte_end":200140,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200145,"byte_end":200216,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: Rc<Connection>) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200221,"byte_end":200281,"line_start":402,"line_end":402,"column_start":5,"column_end":65}},{"value":"/     let tx = conn.unchecked_transaction()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200286,"byte_end":200333,"line_start":403,"line_end":403,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200338,"byte_end":200341,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200346,"byte_end":200414,"line_start":405,"line_end":405,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200419,"byte_end":200487,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200492,"byte_end":200495,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200500,"byte_end":200519,"line_start":408,"line_end":408,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200524,"byte_end":200529,"line_start":409,"line_end":409,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200534,"byte_end":200541,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200546,"byte_end":200549,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200554,"byte_end":200567,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200572,"byte_end":200575,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails. The specific","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200580,"byte_end":200651,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ error returned if transactions are nested is currently unspecified.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200656,"byte_end":200727,"line_start":415,"line_end":415,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201819,"byte_end":201828,"line_start":445,"line_end":445,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Connection>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new savepoint with the default behavior (DEFERRED).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200880,"byte_end":200943,"line_start":420,"line_end":420,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200948,"byte_end":200951,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The savepoint defaults to rolling back when it is dropped. If you want","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":200956,"byte_end":201030,"line_start":422,"line_end":422,"column_start":5,"column_end":79}},{"value":"/ the savepoint to commit, you must call `commit` or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201035,"byte_end":201089,"line_start":423,"line_end":423,"column_start":5,"column_end":59}},{"value":"/ `set_drop_behavior(DropBehavior::Commit)`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201094,"byte_end":201140,"line_start":424,"line_end":424,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201145,"byte_end":201148,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201153,"byte_end":201167,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201172,"byte_end":201175,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201180,"byte_end":201198,"line_start":428,"line_end":428,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201203,"byte_end":201244,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201249,"byte_end":201320,"line_start":430,"line_end":430,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201325,"byte_end":201396,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201401,"byte_end":201462,"line_start":432,"line_end":432,"column_start":5,"column_end":66}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201467,"byte_end":201502,"line_start":433,"line_end":433,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201507,"byte_end":201510,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201515,"byte_end":201583,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201588,"byte_end":201656,"line_start":436,"line_end":436,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201661,"byte_end":201664,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     sp.commit()","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201669,"byte_end":201688,"line_start":438,"line_end":438,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201693,"byte_end":201698,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201703,"byte_end":201710,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201715,"byte_end":201718,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201723,"byte_end":201736,"line_start":442,"line_end":442,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201741,"byte_end":201744,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201749,"byte_end":201807,"line_start":444,"line_end":444,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":202097,"byte_end":202116,"line_start":456,"line_end":456,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Connection>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a specified name.","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a specified name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201907,"byte_end":201955,"line_start":449,"line_end":449,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201960,"byte_end":201963,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ See `savepoint`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201968,"byte_end":201988,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":201993,"byte_end":201996,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":202001,"byte_end":202014,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":202019,"byte_end":202022,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":202027,"byte_end":202085,"line_start":455,"line_end":455,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":623},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":677},{"krate":0,"index":698},{"krate":0,"index":743},{"krate":0,"index":767},{"krate":0,"index":1242},{"krate":0,"index":1246},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1263},{"krate":0,"index":1261},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":798}],"decl_id":null,"docs":" Traits dealing with SQLite data types.","sig":null,"attributes":[{"value":"! Traits dealing with SQLite data types.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209041,"byte_end":209083,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209084,"byte_end":209087,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! SQLite uses a [dynamic type system](https://www.sqlite.org/datatype3.html). Implementations of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209088,"byte_end":209186,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"! the `ToSql` and `FromSql` traits are provided for the basic types that","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209187,"byte_end":209261,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! SQLite provides methods for:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209262,"byte_end":209294,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209295,"byte_end":209298,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * Integers (`i32` and `i64`; SQLite uses `i64` internally, so getting an","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209299,"byte_end":209375,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! `i32` will truncate   if the value is too large or too small).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209376,"byte_end":209442,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"! * Reals (`f64`)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209443,"byte_end":209462,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"! * Strings (`String` and `&str`)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209463,"byte_end":209498,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"! * Blobs (`Vec<u8>` and `&[u8]`)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209499,"byte_end":209534,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209535,"byte_end":209538,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Additionally, because it is such a common data type, implementations are","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209539,"byte_end":209615,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! provided for `time::Timespec` that use the RFC 3339 date/time format,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209616,"byte_end":209689,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! `\"%Y-%m-%dT%H:%M:%S.%fZ\"`, to store time values as strings.  These values","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209690,"byte_end":209767,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"! can be parsed by SQLite's builtin","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209768,"byte_end":209805,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"! [datetime](https://www.sqlite.org/lang_datefunc.html) functions.  If you","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209806,"byte_end":209882,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! want different storage for timespecs, you can use a newtype. For example, to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209883,"byte_end":209963,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! store timespecs as `f64`s:","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209964,"byte_end":209994,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209995,"byte_end":209998,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":209999,"byte_end":210010,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"! use rusqlite::types::{FromSql, FromSqlResult, ToSql, ToSqlOutput, ValueRef};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210011,"byte_end":210091,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! use rusqlite::Result;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210092,"byte_end":210117,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210118,"byte_end":210121,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! pub struct TimespecSql(pub time::Timespec);","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210122,"byte_end":210169,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210170,"byte_end":210173,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! impl FromSql for TimespecSql {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210174,"byte_end":210208,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"!     fn column_result(value: ValueRef) -> FromSqlResult<Self> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210209,"byte_end":210275,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"!         f64::column_result(value).map(|as_f64| {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210276,"byte_end":210328,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"!             TimespecSql(time::Timespec {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210329,"byte_end":210373,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"!                 sec: as_f64.trunc() as i64,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210374,"byte_end":210421,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"!                 nsec: (as_f64.fract() * 1.0e9) as i32,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210422,"byte_end":210480,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"!             })","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210481,"byte_end":210499,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"!         })","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210500,"byte_end":210514,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"!     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210515,"byte_end":210524,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210525,"byte_end":210530,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210531,"byte_end":210534,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! impl ToSql for TimespecSql {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210535,"byte_end":210567,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"!     fn to_sql(&self) -> Result<ToSqlOutput> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210568,"byte_end":210617,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"!         let TimespecSql(ts) = *self;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210618,"byte_end":210658,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"!         let as_f64 = ts.sec as f64 + (ts.nsec as f64) / 1.0e9;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210659,"byte_end":210725,"line_start":41,"line_end":41,"column_start":1,"column_end":67}},{"value":"!         Ok(as_f64.into())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210726,"byte_end":210755,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"!     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210756,"byte_end":210765,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210766,"byte_end":210771,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210772,"byte_end":210779,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210780,"byte_end":210783,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! `ToSql` and `FromSql` are also implemented for `Option<T>` where `T`","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210784,"byte_end":210856,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"! implements `ToSql` or `FromSql` for the cases where you want to know if a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210857,"byte_end":210934,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! value was NULL (which gets translated to `None`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":210935,"byte_end":210988,"line_start":49,"line_end":49,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220690,"byte_end":220701,"line_start":11,"line_end":11,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::types::from_sql::FromSqlError::InvalidType","value":"FromSqlError::InvalidType","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Error when an SQLite value is requested, but the type of the result\n cannot be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when an SQLite value is requested, but the type of the result","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220558,"byte_end":220629,"line_start":9,"line_end":9,"column_start":5,"column_end":76}},{"value":"/ cannot be converted to the requested Rust type.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220634,"byte_end":220685,"line_start":10,"line_end":10,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220810,"byte_end":220820,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::types::from_sql::FromSqlError::OutOfRange","value":"FromSqlError::OutOfRange(i64)","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Error when the i64 value returned by SQLite cannot be stored into the\n requested type.\n","sig":null,"attributes":[{"value":"/ Error when the i64 value returned by SQLite cannot be stored into the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220708,"byte_end":220781,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ requested type.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220786,"byte_end":220805,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":221369,"byte_end":221374,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Other","qualname":"::types::from_sql::FromSqlError::Other","value":"FromSqlError::Other(Box<dyn Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" An error case available for implementors of the `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ An error case available for implementors of the `FromSql` trait.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":221296,"byte_end":221364,"line_start":28,"line_end":28,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220539,"byte_end":220551,"line_start":8,"line_end":8,"column_start":10,"column_end":22},"name":"FromSqlError","qualname":"::types::from_sql::FromSqlError","value":"FromSqlError::{InvalidType, OutOfRange, Other}","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1086}],"decl_id":null,"docs":" Enum listing possible errors from `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from `FromSql` trait.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220440,"byte_end":220494,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"non_exhaustive","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":220512,"byte_end":220529,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":646},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223001,"byte_end":223014,"line_start":75,"line_end":75,"column_start":10,"column_end":23},"name":"FromSqlResult","qualname":"::types::from_sql::FromSqlResult","value":"Result<T, FromSqlError>","parent":null,"children":[],"decl_id":null,"docs":" Result type for implementors of the `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ Result type for implementors of the `FromSql` trait.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":222935,"byte_end":222991,"line_start":74,"line_end":74,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":648},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223731,"byte_end":223738,"line_start":88,"line_end":88,"column_start":11,"column_end":18},"name":"FromSql","qualname":"::types::from_sql::FromSql","value":"FromSql: Sized","parent":null,"children":[{"krate":0,"index":649}],"decl_id":null,"docs":" A trait for types that can be created from a SQLite value.","sig":null,"attributes":[{"value":"/ A trait for types that can be created from a SQLite value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223046,"byte_end":223108,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223109,"byte_end":223112,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Note that `FromSql` and `ToSql` are defined for most integral types, but","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223113,"byte_end":223189,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ not `u64` or `usize`. This is intentional; SQLite returns integers as","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223190,"byte_end":223263,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ signed 64-bit values, which cannot fully represent the range of these","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223264,"byte_end":223337,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ types. Rusqlite would have to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223338,"byte_end":223371,"line_start":82,"line_end":82,"column_start":1,"column_end":34}},{"value":"/ decide how to handle negative values: return an error or reinterpret as a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223372,"byte_end":223449,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ very large postive numbers, neither of which","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223450,"byte_end":223498,"line_start":84,"line_end":84,"column_start":1,"column_end":49}},{"value":"/ is guaranteed to be correct for everyone. Callers can work around this by","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223499,"byte_end":223576,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ fetching values as i64 and then doing the interpretation themselves or by","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223577,"byte_end":223654,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ defining a newtype and implementing `FromSql`/`ToSql` for it.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223655,"byte_end":223720,"line_start":87,"line_end":87,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223755,"byte_end":223768,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"column_result","qualname":"::types::from_sql::FromSql::column_result","value":"fn (value: ValueRef<'_>) -> FromSqlResult<Self>","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":232064,"byte_end":232072,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::types::to_sql::ToSqlOutput::Borrowed","value":"ToSqlOutput::Borrowed(ValueRef<'a>)","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" A borrowed SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ A borrowed SQLite-representable value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":232017,"byte_end":232059,"line_start":12,"line_end":12,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":232138,"byte_end":232143,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Owned","qualname":"::types::to_sql::ToSqlOutput::Owned","value":"ToSqlOutput::Owned(Value)","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" An owned SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ An owned SQLite-representable value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":232093,"byte_end":232133,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":231995,"byte_end":232006,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"ToSqlOutput","qualname":"::types::to_sql::ToSqlOutput","value":"ToSqlOutput::{Borrowed, Owned}","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1114}],"decl_id":null,"docs":" `ToSqlOutput` represents the possible output types for implementors of the\n `ToSql` trait.\n","sig":null,"attributes":[{"value":"/ `ToSqlOutput` represents the possible output types for implementors of the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":231835,"byte_end":231913,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ `ToSql` trait.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":231914,"byte_end":231932,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"non_exhaustive","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":231968,"byte_end":231985,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":712},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234227,"byte_end":234232,"line_start":89,"line_end":89,"column_start":11,"column_end":16},"name":"ToSql","qualname":"::types::to_sql::ToSql","value":"ToSql","parent":null,"children":[{"krate":0,"index":713}],"decl_id":null,"docs":" A trait for types that can be converted into SQLite values.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into SQLite values.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234153,"byte_end":234216,"line_start":88,"line_end":88,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234242,"byte_end":234248,"line_start":90,"line_end":90,"column_start":8,"column_end":14},"name":"to_sql","qualname":"::types::to_sql::ToSql::to_sql","value":"fn (&self) -> Result<ToSqlOutput<'_>>","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241828,"byte_end":241832,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241791,"byte_end":241823,"line_start":9,"line_end":9,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241877,"byte_end":241884,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241838,"byte_end":241872,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241941,"byte_end":241945,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value::Value::Real","value":"Value::Real(f64)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241895,"byte_end":241936,"line_start":13,"line_end":13,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241992,"byte_end":241996,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241956,"byte_end":241987,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242046,"byte_end":242050,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value::Value::Blob","value":"Value::Blob(Vec<u8>)","parent":{"krate":0,"index":1177},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242010,"byte_end":242041,"line_start":17,"line_end":17,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241779,"byte_end":241784,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::value::Value","value":"Value::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically\n dictated by SQLite (not by the caller).","sig":null,"attributes":[{"value":"/ Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241516,"byte_end":241608,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ dictated by SQLite (not by the caller).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241609,"byte_end":241652,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241653,"byte_end":241656,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`ValueRef`](enum.ValueRef.html) for a non-owning dynamic type value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":241657,"byte_end":241734,"line_start":6,"line_end":6,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243814,"byte_end":243823,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"data_type","qualname":"<Value>::data_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244487,"byte_end":244491,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value_ref::ValueRef::Null","value":"ValueRef::Null","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244450,"byte_end":244482,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244536,"byte_end":244543,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value_ref::ValueRef::Integer","value":"ValueRef::Integer(i64)","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244497,"byte_end":244531,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244600,"byte_end":244604,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value_ref::ValueRef::Real","value":"ValueRef::Real(f64)","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244554,"byte_end":244595,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244651,"byte_end":244655,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value_ref::ValueRef::Text","value":"ValueRef::Text(&'a [u8])","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244615,"byte_end":244646,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244707,"byte_end":244711,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value_ref::ValueRef::Blob","value":"ValueRef::Blob(&'a [u8])","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244671,"byte_end":244702,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244431,"byte_end":244439,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::types::value_ref::ValueRef","value":"ValueRef::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1225}],"decl_id":null,"docs":" A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the\n memory backing this value is owned by SQLite.","sig":null,"attributes":[{"value":"/ A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244171,"byte_end":244257,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ memory backing this value is owned by SQLite.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244258,"byte_end":244307,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244308,"byte_end":244311,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`Value`](enum.Value.html) for an owning dynamic type value.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244312,"byte_end":244380,"line_start":7,"line_end":7,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244757,"byte_end":244766,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"data_type","qualname":"<ValueRef>::data_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245213,"byte_end":245219,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<ValueRef>::as_i64","value":"fn (&self) -> FromSqlResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Integer`, returns the integral value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Integer`, returns the integral value. Otherwise,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245081,"byte_end":245152,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ returns `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245157,"byte_end":245201,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245521,"byte_end":245527,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<ValueRef>::as_f64","value":"fn (&self) -> FromSqlResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Real`, returns the floating point value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Real`, returns the floating point value. Otherwise,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245386,"byte_end":245460,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ returns `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245465,"byte_end":245509,"line_start":45,"line_end":45,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245818,"byte_end":245824,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ValueRef>::as_str","value":"fn (&self) -> FromSqlResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Text`, returns the string value. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Text`, returns the string value. Otherwise, returns","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245691,"byte_end":245765,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245770,"byte_end":245806,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":246211,"byte_end":246218,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"as_blob","qualname":"<ValueRef>::as_blob","value":"fn (&self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Blob`, returns the byte slice. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Blob`, returns the byte slice. Otherwise, returns","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":246086,"byte_end":246158,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ `Err(Error::InvalidColumnType)`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":246163,"byte_end":246199,"line_start":65,"line_end":65,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211731,"byte_end":211735,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"Null","qualname":"::types::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty struct that can be used to fill in a query parameter as `NULL`.","sig":null,"attributes":[{"value":"/ Empty struct that can be used to fill in a query parameter as `NULL`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211359,"byte_end":211432,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211433,"byte_end":211436,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211437,"byte_end":211451,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211452,"byte_end":211455,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211456,"byte_end":211474,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211475,"byte_end":211516,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ # use rusqlite::types::{Null};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211517,"byte_end":211551,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211552,"byte_end":211555,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ fn insert_null(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211556,"byte_end":211612,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"/     conn.execute(\"INSERT INTO people (name) VALUES (?)\", &[Null])","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211613,"byte_end":211682,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211683,"byte_end":211688,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211689,"byte_end":211696,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211793,"byte_end":211797,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::Type::Null","value":"Type::Null","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211803,"byte_end":211810,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::Type::Integer","value":"Type::Integer","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211816,"byte_end":211820,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::Type::Real","value":"Type::Real","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211826,"byte_end":211830,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::Type::Text","value":"Type::Text","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211836,"byte_end":211840,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::Type::Blob","value":"Type::Blob","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211782,"byte_end":211786,"line_start":86,"line_end":86,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::Type","value":"Type::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254307,"byte_end":254321,"line_start":8,"line_end":8,"column_start":8,"column_end":22},"name":"version_number","qualname":"::version::version_number","value":"fn () -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as an integer; e.g., `3016002` for version\n 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as an integer; e.g., `3016002` for version","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254123,"byte_end":254196,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ 3.16.2.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254197,"byte_end":254208,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254209,"byte_end":254212,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion_number()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254213,"byte_end":254299,"line_start":7,"line_end":7,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":809},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254556,"byte_end":254563,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"version","qualname":"::version::version","value":"fn () -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254384,"byte_end":254464,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254465,"byte_end":254468,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/version.rs","byte_start":254469,"byte_end":254548,"line_start":14,"line_end":14,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":853},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":3730,"byte_end":3739,"line_start":137,"line_end":137,"column_start":11,"column_end":20},"name":"NO_PARAMS","qualname":"::NO_PARAMS","value":"&[&dyn ToSql]","parent":null,"children":[],"decl_id":null,"docs":" To be used when your statement has no [parameter](https://sqlite.org/lang_expr.html#varparam).\n","sig":null,"attributes":[{"value":"/ To be used when your statement has no [parameter](https://sqlite.org/lang_expr.html#varparam).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":3621,"byte_end":3719,"line_start":136,"line_end":136,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":856},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5664,"byte_end":5670,"line_start":210,"line_end":210,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" A typedef of the result returned by many methods.\n","sig":null,"attributes":[{"value":"/ A typedef of the result returned by many methods.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5601,"byte_end":5654,"line_start":209,"line_end":209,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":859},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5776,"byte_end":5793,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"OptionalExtension","qualname":"::OptionalExtension","value":"OptionalExtension<T>","parent":null,"children":[{"krate":0,"index":861}],"decl_id":null,"docs":" See the [method documentation](#tymethod.optional).\n","sig":null,"attributes":[{"value":"/ See the [method documentation](#tymethod.optional).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5710,"byte_end":5765,"line_start":212,"line_end":212,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":6084,"byte_end":6092,"line_start":219,"line_end":219,"column_start":8,"column_end":16},"name":"optional","qualname":"::OptionalExtension::optional","value":"fn (self) -> Result<Option<T>>","parent":{"krate":0,"index":859},"children":[],"decl_id":null,"docs":" Converts a `Result<T>` into a `Result<Option<T>>`.","sig":null,"attributes":[{"value":"/ Converts a `Result<T>` into a `Result<Option<T>>`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5803,"byte_end":5857,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5862,"byte_end":5865,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ By default, Rusqlite treats 0 rows being returned from a query that is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5870,"byte_end":5944,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ expected to return 1 row as an error. This method will","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":5949,"byte_end":6007,"line_start":217,"line_end":217,"column_start":5,"column_end":63}},{"value":"/ handle that error, and give you back an `Option<T>` instead.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":6012,"byte_end":6076,"line_start":218,"line_end":218,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8155,"byte_end":8159,"line_start":287,"line_end":287,"column_start":5,"column_end":9},"name":"Main","qualname":"::DatabaseName::Main","value":"DatabaseName::Main","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" The main database.\n","sig":null,"attributes":[{"value":"/ The main database.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8128,"byte_end":8150,"line_start":286,"line_end":286,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8242,"byte_end":8246,"line_start":290,"line_end":290,"column_start":5,"column_end":9},"name":"Temp","qualname":"::DatabaseName::Temp","value":"DatabaseName::Temp","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n","sig":null,"attributes":[{"value":"/ The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8166,"byte_end":8237,"line_start":289,"line_end":289,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8322,"byte_end":8330,"line_start":293,"line_end":293,"column_start":5,"column_end":13},"name":"Attached","qualname":"::DatabaseName::Attached","value":"DatabaseName::Attached(&'a str)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" A database that has been attached via \"ATTACH DATABASE ...\".\n","sig":null,"attributes":[{"value":"/ A database that has been attached via \"ATTACH DATABASE ...\".","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8253,"byte_end":8317,"line_start":292,"line_end":292,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8105,"byte_end":8117,"line_start":285,"line_end":285,"column_start":10,"column_end":22},"name":"DatabaseName","qualname":"::DatabaseName","value":"DatabaseName::{Main, Temp, Attached}","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302}],"decl_id":null,"docs":" Name for a database within a SQLite connection.\n","sig":null,"attributes":[{"value":"/ Name for a database within a SQLite connection.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8021,"byte_end":8072,"line_start":283,"line_end":283,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":871},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8950,"byte_end":8960,"line_start":316,"line_end":316,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"decl_id":null,"docs":" A connection to a SQLite database.\n","sig":null,"attributes":[{"value":"/ A connection to a SQLite database.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":8900,"byte_end":8938,"line_start":315,"line_end":315,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9924,"byte_end":9928,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"open","qualname":"<Connection>::open","value":"fn <P> (path: P) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9220,"byte_end":9267,"line_start":331,"line_end":331,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9272,"byte_end":9275,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ `Connection::open(path)` is equivalent to","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9280,"byte_end":9325,"line_start":333,"line_end":333,"column_start":5,"column_end":50}},{"value":"/ `Connection::open_with_flags(path,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9330,"byte_end":9368,"line_start":334,"line_end":334,"column_start":5,"column_end":43}},{"value":"/ OpenFlags::SQLITE_OPEN_READ_WRITE |","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9373,"byte_end":9412,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ OpenFlags::SQLITE_OPEN_CREATE)`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9417,"byte_end":9453,"line_start":336,"line_end":336,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9458,"byte_end":9461,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9466,"byte_end":9484,"line_start":338,"line_end":338,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9489,"byte_end":9530,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"/ fn open_my_db() -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9535,"byte_end":9570,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/     let path = \"./my_db.db3\";","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9575,"byte_end":9608,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/     let db = Connection::open(&path)?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9613,"byte_end":9655,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/     println!(\"{}\", db.is_autocommit());","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9660,"byte_end":9703,"line_start":343,"line_end":343,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9708,"byte_end":9722,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9727,"byte_end":9732,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9737,"byte_end":9744,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9749,"byte_end":9752,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9757,"byte_end":9770,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9775,"byte_end":9778,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9783,"byte_end":9852,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9857,"byte_end":9912,"line_start":351,"line_end":351,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10252,"byte_end":10266,"line_start":362,"line_end":362,"column_start":12,"column_end":26},"name":"open_in_memory","qualname":"<Connection>::open_in_memory","value":"fn () -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10080,"byte_end":10138,"line_start":357,"line_end":357,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10143,"byte_end":10146,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10151,"byte_end":10164,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10169,"byte_end":10172,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10177,"byte_end":10240,"line_start":361,"line_end":361,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10757,"byte_end":10772,"line_start":376,"line_end":376,"column_start":12,"column_end":27},"name":"open_with_flags","qualname":"<Connection>::open_with_flags","value":"fn <P> (path: P, flags: OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10399,"byte_end":10446,"line_start":367,"line_end":367,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10451,"byte_end":10454,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10459,"byte_end":10550,"line_start":369,"line_end":369,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10555,"byte_end":10577,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10582,"byte_end":10585,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10590,"byte_end":10603,"line_start":372,"line_end":372,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10608,"byte_end":10611,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10616,"byte_end":10685,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":10690,"byte_end":10745,"line_start":375,"line_end":375,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11592,"byte_end":11615,"line_start":395,"line_end":395,"column_start":12,"column_end":35},"name":"open_with_flags_and_vfs","qualname":"<Connection>::open_with_flags_and_vfs","value":"fn <P> (path: P, flags: OpenFlags, vfs: &str) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database using the specific flags and\n vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database using the specific flags and","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11172,"byte_end":11247,"line_start":385,"line_end":385,"column_start":5,"column_end":80}},{"value":"/ vfs name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11252,"byte_end":11265,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11270,"byte_end":11273,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11278,"byte_end":11369,"line_start":388,"line_end":388,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11374,"byte_end":11396,"line_start":389,"line_end":389,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11401,"byte_end":11404,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11409,"byte_end":11422,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11427,"byte_end":11430,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if either `path` or `vfs` cannot be converted to a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11435,"byte_end":11507,"line_start":393,"line_end":393,"column_start":5,"column_end":77}},{"value":"/ C-compatible string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":11512,"byte_end":11580,"line_start":394,"line_end":394,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12410,"byte_end":12435,"line_start":417,"line_end":417,"column_start":12,"column_end":37},"name":"open_in_memory_with_flags","qualname":"<Connection>::open_in_memory_with_flags","value":"fn (flags: OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12107,"byte_end":12165,"line_start":409,"line_end":409,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12170,"byte_end":12173,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12178,"byte_end":12269,"line_start":411,"line_end":411,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12274,"byte_end":12296,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12301,"byte_end":12304,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12309,"byte_end":12322,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12327,"byte_end":12330,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12335,"byte_end":12398,"line_start":416,"line_end":416,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12957,"byte_end":12990,"line_start":431,"line_end":431,"column_start":12,"column_end":45},"name":"open_in_memory_with_flags_and_vfs","qualname":"<Connection>::open_in_memory_with_flags_and_vfs","value":"fn (flags: OpenFlags, vfs: &str) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database using the specific\n flags and vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database using the specific","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12544,"byte_end":12620,"line_start":421,"line_end":421,"column_start":5,"column_end":81}},{"value":"/ flags and vfs name.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12625,"byte_end":12648,"line_start":422,"line_end":422,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12653,"byte_end":12656,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12661,"byte_end":12752,"line_start":424,"line_end":424,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12757,"byte_end":12779,"line_start":425,"line_end":425,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12784,"byte_end":12787,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12792,"byte_end":12805,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12810,"byte_end":12813,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if vfs` cannot be converted to a C-compatible","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12818,"byte_end":12885,"line_start":429,"line_end":429,"column_start":5,"column_end":72}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":12890,"byte_end":12945,"line_start":430,"line_end":430,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13901,"byte_end":13914,"line_start":458,"line_end":458,"column_start":12,"column_end":25},"name":"execute_batch","qualname":"<Connection>::execute_batch","value":"fn (&self, sql: &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to run multiple SQL statements (that cannot take any\n parameters).","sig":null,"attributes":[{"value":"/ Convenience method to run multiple SQL statements (that cannot take any","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13123,"byte_end":13198,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ parameters).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13203,"byte_end":13219,"line_start":436,"line_end":436,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13224,"byte_end":13227,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_exec](http://www.sqlite.org/c3ref/exec.html) under the hood.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13232,"byte_end":13310,"line_start":438,"line_end":438,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13315,"byte_end":13318,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13323,"byte_end":13337,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13342,"byte_end":13345,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13350,"byte_end":13368,"line_start":442,"line_end":442,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13373,"byte_end":13414,"line_start":443,"line_end":443,"column_start":5,"column_end":46}},{"value":"/ fn create_tables(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13419,"byte_end":13474,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/     conn.execute_batch(","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13479,"byte_end":13506,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/         \"BEGIN;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13511,"byte_end":13530,"line_start":446,"line_end":446,"column_start":5,"column_end":24}},{"value":"/                         CREATE TABLE foo(x INTEGER);","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13535,"byte_end":13591,"line_start":447,"line_end":447,"column_start":5,"column_end":61}},{"value":"/                         CREATE TABLE bar(y TEXT);","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13596,"byte_end":13649,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/                         COMMIT;\",","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13654,"byte_end":13691,"line_start":449,"line_end":449,"column_start":5,"column_end":42}},{"value":"/     )","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13696,"byte_end":13705,"line_start":450,"line_end":450,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13710,"byte_end":13715,"line_start":451,"line_end":451,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13720,"byte_end":13727,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13732,"byte_end":13735,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13740,"byte_end":13753,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13758,"byte_end":13761,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13766,"byte_end":13841,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":13846,"byte_end":13889,"line_start":457,"line_end":457,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14780,"byte_end":14787,"line_start":483,"line_end":483,"column_start":12,"column_end":19},"name":"execute","qualname":"<Connection>::execute","value":"fn <P> (&self, sql: &str, params: P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement.","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14008,"byte_end":14077,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14082,"byte_end":14085,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14090,"byte_end":14165,"line_start":464,"line_end":464,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14170,"byte_end":14206,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14211,"byte_end":14214,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14219,"byte_end":14233,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14238,"byte_end":14241,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14246,"byte_end":14264,"line_start":469,"line_end":469,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14269,"byte_end":14302,"line_start":470,"line_end":470,"column_start":5,"column_end":38}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14307,"byte_end":14346,"line_start":471,"line_end":471,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\", &[1i32]) {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14351,"byte_end":14432,"line_start":472,"line_end":472,"column_start":5,"column_end":86}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14437,"byte_end":14506,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14511,"byte_end":14570,"line_start":474,"line_end":474,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14575,"byte_end":14584,"line_start":475,"line_end":475,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14589,"byte_end":14594,"line_start":476,"line_end":476,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14599,"byte_end":14606,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14611,"byte_end":14614,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14619,"byte_end":14632,"line_start":479,"line_end":479,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14637,"byte_end":14640,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14645,"byte_end":14720,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":14725,"byte_end":14768,"line_start":482,"line_end":482,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15757,"byte_end":15770,"line_start":514,"line_end":514,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Connection>::execute_named","value":"fn (&self, sql: &str, params: &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement with\n named parameter(s).","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement with","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15029,"byte_end":15102,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/ named parameter(s).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15107,"byte_end":15130,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15135,"byte_end":15138,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15143,"byte_end":15218,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15223,"byte_end":15259,"line_start":496,"line_end":496,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15264,"byte_end":15267,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15272,"byte_end":15286,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15291,"byte_end":15294,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15299,"byte_end":15317,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15322,"byte_end":15363,"line_start":501,"line_end":501,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15368,"byte_end":15419,"line_start":502,"line_end":502,"column_start":5,"column_end":56}},{"value":"/     conn.execute_named(","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15424,"byte_end":15451,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/         \"INSERT INTO test (name) VALUES (:name)\",","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15456,"byte_end":15509,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/         &[(\":name\", &\"one\")],","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15514,"byte_end":15547,"line_start":505,"line_end":505,"column_start":5,"column_end":38}},{"value":"/     )","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15552,"byte_end":15561,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15566,"byte_end":15571,"line_start":507,"line_end":507,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15576,"byte_end":15583,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15588,"byte_end":15591,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15596,"byte_end":15609,"line_start":510,"line_end":510,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15614,"byte_end":15617,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15622,"byte_end":15697,"line_start":512,"line_end":512,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":15702,"byte_end":15745,"line_start":513,"line_end":513,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16200,"byte_end":16217,"line_start":525,"line_end":525,"column_start":12,"column_end":29},"name":"last_insert_rowid","qualname":"<Connection>::last_insert_rowid","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the SQLite rowid of the most recent successful INSERT.","sig":null,"attributes":[{"value":"/ Get the SQLite rowid of the most recent successful INSERT.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16000,"byte_end":16062,"line_start":521,"line_end":521,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16067,"byte_end":16070,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_last_insert_rowid](https://www.sqlite.org/c3ref/last_insert_rowid.html) under","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16075,"byte_end":16170,"line_start":523,"line_end":523,"column_start":5,"column_end":100}},{"value":"/ the hood.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16175,"byte_end":16188,"line_start":524,"line_end":524,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17242,"byte_end":17251,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Connection>::query_row","value":"fn <T, P, F> (&self, sql: &str, params: P, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16294,"byte_end":16364,"line_start":529,"line_end":529,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16369,"byte_end":16384,"line_start":530,"line_end":530,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16389,"byte_end":16392,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16397,"byte_end":16411,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16416,"byte_end":16419,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16424,"byte_end":16442,"line_start":534,"line_end":534,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result,Connection, NO_PARAMS};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16447,"byte_end":16498,"line_start":535,"line_end":535,"column_start":5,"column_end":56}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16503,"byte_end":16565,"line_start":536,"line_end":536,"column_start":5,"column_end":67}},{"value":"/     conn.query_row(","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16570,"byte_end":16593,"line_start":537,"line_end":537,"column_start":5,"column_end":28}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16598,"byte_end":16662,"line_start":538,"line_end":538,"column_start":5,"column_end":69}},{"value":"/         NO_PARAMS,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16667,"byte_end":16689,"line_start":539,"line_end":539,"column_start":5,"column_end":27}},{"value":"/         |row| row.get(0),","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16694,"byte_end":16723,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16728,"byte_end":16737,"line_start":541,"line_end":541,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16742,"byte_end":16747,"line_start":542,"line_end":542,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16752,"byte_end":16759,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16764,"byte_end":16767,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16772,"byte_end":16845,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16850,"byte_end":16862,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16867,"byte_end":16870,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16875,"byte_end":16948,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":16953,"byte_end":17025,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17030,"byte_end":17068,"line_start":550,"line_end":550,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17073,"byte_end":17076,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17081,"byte_end":17094,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17099,"byte_end":17102,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17107,"byte_end":17182,"line_start":554,"line_end":554,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17187,"byte_end":17230,"line_start":555,"line_end":555,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18132,"byte_end":18147,"line_start":581,"line_end":581,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Connection>::query_row_named","value":"fn <T, F> (&self, sql: &str, params: &[(&str, &dyn ToSql)], f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17535,"byte_end":17608,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17613,"byte_end":17649,"line_start":568,"line_end":568,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17654,"byte_end":17657,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17662,"byte_end":17735,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17740,"byte_end":17752,"line_start":571,"line_end":571,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17757,"byte_end":17760,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17765,"byte_end":17838,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17843,"byte_end":17915,"line_start":574,"line_end":574,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17920,"byte_end":17958,"line_start":575,"line_end":575,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17963,"byte_end":17966,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17971,"byte_end":17984,"line_start":577,"line_end":577,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17989,"byte_end":17992,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":17997,"byte_end":18072,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18077,"byte_end":18120,"line_start":580,"line_end":580,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19325,"byte_end":19343,"line_start":615,"line_end":615,"column_start":12,"column_end":30},"name":"query_row_and_then","qualname":"<Connection>::query_row_and_then","value":"fn <T, E, P, F> (&self, sql: &str, params: P, f: F) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row, and execute a mapping via `f` on that returned row with\n the possibility of failure. The `Result` type of `f` must implement\n `std::convert::From<Error>`.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18405,"byte_end":18475,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/ single row, and execute a mapping via `f` on that returned row with","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18480,"byte_end":18551,"line_start":591,"line_end":591,"column_start":5,"column_end":76}},{"value":"/ the possibility of failure. The `Result` type of `f` must implement","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18556,"byte_end":18627,"line_start":592,"line_end":592,"column_start":5,"column_end":76}},{"value":"/ `std::convert::From<Error>`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18632,"byte_end":18664,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18669,"byte_end":18672,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18677,"byte_end":18691,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18696,"byte_end":18699,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18704,"byte_end":18722,"line_start":597,"line_end":597,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result,Connection, NO_PARAMS};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18727,"byte_end":18778,"line_start":598,"line_end":598,"column_start":5,"column_end":56}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18783,"byte_end":18845,"line_start":599,"line_end":599,"column_start":5,"column_end":67}},{"value":"/     conn.query_row_and_then(","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18850,"byte_end":18882,"line_start":600,"line_end":600,"column_start":5,"column_end":37}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18887,"byte_end":18951,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/         NO_PARAMS,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18956,"byte_end":18978,"line_start":602,"line_end":602,"column_start":5,"column_end":27}},{"value":"/         |row| row.get(0),","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":18983,"byte_end":19012,"line_start":603,"line_end":603,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19017,"byte_end":19026,"line_start":604,"line_end":604,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19031,"byte_end":19036,"line_start":605,"line_end":605,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19041,"byte_end":19048,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19053,"byte_end":19056,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19061,"byte_end":19134,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19139,"byte_end":19151,"line_start":609,"line_end":609,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19156,"byte_end":19159,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19164,"byte_end":19177,"line_start":611,"line_end":611,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19182,"byte_end":19185,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19190,"byte_end":19265,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19270,"byte_end":19313,"line_start":614,"line_end":614,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20342,"byte_end":20349,"line_start":647,"line_end":647,"column_start":12,"column_end":19},"name":"prepare","qualname":"<Connection>::prepare","value":"fn (&self, sql: &str) -> Result<Statement<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19749,"byte_end":19791,"line_start":629,"line_end":629,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19796,"byte_end":19799,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19804,"byte_end":19818,"line_start":631,"line_end":631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19823,"byte_end":19826,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19831,"byte_end":19849,"line_start":633,"line_end":633,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19854,"byte_end":19895,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19900,"byte_end":19959,"line_start":635,"line_end":635,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":19964,"byte_end":20041,"line_start":636,"line_end":636,"column_start":5,"column_end":82}},{"value":"/     stmt.execute(&[\"Joe Smith\"])?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20046,"byte_end":20084,"line_start":637,"line_end":637,"column_start":5,"column_end":43}},{"value":"/     stmt.execute(&[\"Bob Jones\"])?;","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20089,"byte_end":20127,"line_start":638,"line_end":638,"column_start":5,"column_end":43}},{"value":"/     Ok(())","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20132,"byte_end":20146,"line_start":639,"line_end":639,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20151,"byte_end":20156,"line_start":640,"line_end":640,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20161,"byte_end":20168,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20173,"byte_end":20176,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20181,"byte_end":20194,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20199,"byte_end":20202,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20207,"byte_end":20282,"line_start":645,"line_end":645,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20287,"byte_end":20330,"line_start":646,"line_end":646,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20823,"byte_end":20828,"line_start":660,"line_end":660,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"fn (self) -> Result<(), (Connection, Error)>","parent":null,"children":[],"decl_id":null,"docs":" Close the SQLite connection.","sig":null,"attributes":[{"value":"/ Close the SQLite connection.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20454,"byte_end":20486,"line_start":651,"line_end":651,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20491,"byte_end":20494,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ This is functionally equivalent to the `Drop` implementation for","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20499,"byte_end":20567,"line_start":653,"line_end":653,"column_start":5,"column_end":73}},{"value":"/ `Connection` except that on failure, it returns an error and the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20572,"byte_end":20640,"line_start":654,"line_end":654,"column_start":5,"column_end":73}},{"value":"/ connection itself (presumably so closing can be attempted again).","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20645,"byte_end":20714,"line_start":655,"line_end":655,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20719,"byte_end":20722,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20727,"byte_end":20740,"line_start":657,"line_end":657,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20745,"byte_end":20748,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":20753,"byte_end":20811,"line_start":659,"line_end":659,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23919,"byte_end":23925,"line_start":748,"line_end":748,"column_start":19,"column_end":25},"name":"handle","qualname":"<Connection>::handle","value":"fn (&self) -> *mut ffi::sqlite3","parent":null,"children":[],"decl_id":null,"docs":" Get access to the underlying SQLite database connection handle.","sig":null,"attributes":[{"value":"/ Get access to the underlying SQLite database connection handle.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23382,"byte_end":23449,"line_start":735,"line_end":735,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23454,"byte_end":23457,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23462,"byte_end":23475,"line_start":737,"line_end":737,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23480,"byte_end":23483,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ You should not need to use this function. If you do need to, please","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23488,"byte_end":23559,"line_start":739,"line_end":739,"column_start":5,"column_end":76}},{"value":"/ [open an issue on the rusqlite repository](https://github.com/rusqlite/rusqlite/issues) and describe","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23564,"byte_end":23668,"line_start":740,"line_end":740,"column_start":5,"column_end":109}},{"value":"/ your use case.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23673,"byte_end":23691,"line_start":741,"line_end":741,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23696,"byte_end":23699,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23704,"byte_end":23716,"line_start":743,"line_end":743,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23721,"byte_end":23724,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it gives you raw access","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23729,"byte_end":23788,"line_start":745,"line_end":745,"column_start":5,"column_end":64}},{"value":"/ to the SQLite connection, and what you do with it could impact the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23793,"byte_end":23863,"line_start":746,"line_end":746,"column_start":5,"column_end":75}},{"value":"/ safety of this `Connection`.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23868,"byte_end":23900,"line_start":747,"line_end":747,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24313,"byte_end":24324,"line_start":760,"line_end":760,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<Connection>::from_handle","value":"fn (db: *mut ffi::sqlite3) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Connection` from a raw handle.","sig":null,"attributes":[{"value":"/ Create a `Connection` from a raw handle.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":23997,"byte_end":24041,"line_start":752,"line_end":752,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24046,"byte_end":24049,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ The underlying SQLite database connection handle will not be closed when","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24054,"byte_end":24130,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/ the returned connection is dropped/closed.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24135,"byte_end":24181,"line_start":755,"line_end":755,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24186,"byte_end":24189,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24194,"byte_end":24206,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24211,"byte_end":24214,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may impact the Connection.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24219,"byte_end":24294,"line_start":759,"line_end":759,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24770,"byte_end":24790,"line_start":772,"line_end":772,"column_start":12,"column_end":32},"name":"get_interrupt_handle","qualname":"<Connection>::get_interrupt_handle","value":"fn (&self) -> InterruptHandle","parent":null,"children":[],"decl_id":null,"docs":" Get access to a handle that can be used to interrupt long running\n queries from another thread.\n","sig":null,"attributes":[{"value":"/ Get access to a handle that can be used to interrupt long running","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24652,"byte_end":24721,"line_start":770,"line_end":770,"column_start":5,"column_end":74}},{"value":"/ queries from another thread.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":24726,"byte_end":24758,"line_start":771,"line_end":771,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":25328,"byte_end":25341,"line_start":789,"line_end":789,"column_start":12,"column_end":25},"name":"is_autocommit","qualname":"<Connection>::is_autocommit","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for auto-commit mode.\n Autocommit mode is on by default.\n","sig":null,"attributes":[{"value":"/ Test for auto-commit mode.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":25244,"byte_end":25274,"line_start":787,"line_end":787,"column_start":5,"column_end":35}},{"value":"/ Autocommit mode is on by default.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":25279,"byte_end":25316,"line_start":788,"line_end":788,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26013,"byte_end":26022,"line_start":812,"line_end":812,"column_start":16,"column_end":25},"name":"OpenFlags","qualname":"::OpenFlags","value":"OpenFlags {  }","parent":null,"children":[{"krate":0,"index":1311}],"decl_id":null,"docs":"Flags for opening SQLite database connections.\nSee [sqlite3_open_v2](http://www.sqlite.org/c3ref/open.html) for details.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":8359242,"byte_end":8359251,"line_start":405,"line_end":405,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26062,"byte_end":26083,"line_start":813,"line_end":813,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_READ_ONLY","qualname":"::OpenFlags::SQLITE_OPEN_READ_ONLY","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26131,"byte_end":26153,"line_start":814,"line_end":814,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_READ_WRITE","qualname":"::OpenFlags::SQLITE_OPEN_READ_WRITE","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26201,"byte_end":26219,"line_start":815,"line_end":815,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_CREATE","qualname":"::OpenFlags::SQLITE_OPEN_CREATE","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26268,"byte_end":26283,"line_start":816,"line_end":816,"column_start":15,"column_end":30},"name":"SQLITE_OPEN_URI","qualname":"::OpenFlags::SQLITE_OPEN_URI","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26323,"byte_end":26341,"line_start":817,"line_end":817,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_MEMORY","qualname":"::OpenFlags::SQLITE_OPEN_MEMORY","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26378,"byte_end":26398,"line_start":818,"line_end":818,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NO_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_NO_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26446,"byte_end":26468,"line_start":819,"line_end":819,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_FULL_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_FULL_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26516,"byte_end":26540,"line_start":820,"line_end":820,"column_start":15,"column_end":39},"name":"SQLITE_OPEN_SHARED_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_SHARED_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26571,"byte_end":26596,"line_start":821,"line_end":821,"column_start":15,"column_end":40},"name":"SQLITE_OPEN_PRIVATE_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_PRIVATE_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26626,"byte_end":26646,"line_start":822,"line_end":822,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NOFOLLOW","qualname":"::OpenFlags::SQLITE_OPEN_NOFOLLOW","value":"OpenFlags","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":925},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27922,"byte_end":27950,"line_start":854,"line_end":854,"column_start":15,"column_end":43},"name":"bypass_sqlite_initialization","qualname":"::bypass_sqlite_initialization","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or\n later. If you are running against a SQLite older than that, rusqlite\n attempts to ensure safety by performing configuration and initialization of\n SQLite itself the first time you\n attempt to open a connection. By default, rusqlite panics if that\n initialization fails, since that could mean SQLite has been initialized in\n single-thread mode.","sig":null,"attributes":[{"value":"/ rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26914,"byte_end":26992,"line_start":835,"line_end":835,"column_start":1,"column_end":79}},{"value":"/ later. If you are running against a SQLite older than that, rusqlite","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26993,"byte_end":27065,"line_start":836,"line_end":836,"column_start":1,"column_end":73}},{"value":"/ attempts to ensure safety by performing configuration and initialization of","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27066,"byte_end":27145,"line_start":837,"line_end":837,"column_start":1,"column_end":80}},{"value":"/ SQLite itself the first time you","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27146,"byte_end":27182,"line_start":838,"line_end":838,"column_start":1,"column_end":37}},{"value":"/ attempt to open a connection. By default, rusqlite panics if that","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27183,"byte_end":27252,"line_start":839,"line_end":839,"column_start":1,"column_end":70}},{"value":"/ initialization fails, since that could mean SQLite has been initialized in","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27253,"byte_end":27331,"line_start":840,"line_end":840,"column_start":1,"column_end":79}},{"value":"/ single-thread mode.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27332,"byte_end":27355,"line_start":841,"line_end":841,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27356,"byte_end":27359,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ If you are encountering that panic _and_ can ensure that SQLite has been","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27360,"byte_end":27436,"line_start":843,"line_end":843,"column_start":1,"column_end":77}},{"value":"/ initialized in either multi-thread or serialized mode, call this function","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27437,"byte_end":27514,"line_start":844,"line_end":844,"column_start":1,"column_end":78}},{"value":"/ prior to attempting to open a connection and rusqlite's initialization","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27515,"byte_end":27589,"line_start":845,"line_end":845,"column_start":1,"column_end":75}},{"value":"/ process will by skipped.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27590,"byte_end":27618,"line_start":846,"line_end":846,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27619,"byte_end":27622,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27623,"byte_end":27635,"line_start":848,"line_end":848,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27636,"byte_end":27639,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe because if you call it and SQLite has actually been","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27640,"byte_end":27719,"line_start":850,"line_end":850,"column_start":1,"column_end":80}},{"value":"/ configured to run in single-thread mode,","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27720,"byte_end":27764,"line_start":851,"line_end":851,"column_start":1,"column_end":45}},{"value":"/ you may enounter memory errors or data corruption or any number of terrible","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27765,"byte_end":27844,"line_start":852,"line_end":852,"column_start":1,"column_end":80}},{"value":"/ things that should not be possible when you're using Rust.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":27845,"byte_end":27907,"line_start":853,"line_end":853,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":926},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28528,"byte_end":28555,"line_start":868,"line_end":868,"column_start":15,"column_end":42},"name":"bypass_sqlite_version_check","qualname":"::bypass_sqlite_version_check","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite performs a one-time check that the runtime SQLite version is at\n least as new as the version of SQLite found when rusqlite was built.\n Bypassing this check may be dangerous; e.g., if you use features of SQLite\n that are not present in the runtime version.","sig":null,"attributes":[{"value":"/ rusqlite performs a one-time check that the runtime SQLite version is at","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28013,"byte_end":28089,"line_start":858,"line_end":858,"column_start":1,"column_end":77}},{"value":"/ least as new as the version of SQLite found when rusqlite was built.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28090,"byte_end":28162,"line_start":859,"line_end":859,"column_start":1,"column_end":73}},{"value":"/ Bypassing this check may be dangerous; e.g., if you use features of SQLite","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28163,"byte_end":28241,"line_start":860,"line_end":860,"column_start":1,"column_end":79}},{"value":"/ that are not present in the runtime version.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28242,"byte_end":28290,"line_start":861,"line_end":861,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28291,"byte_end":28294,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28295,"byte_end":28307,"line_start":863,"line_end":863,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28308,"byte_end":28311,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ If you are sure the runtime version is compatible with the","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28312,"byte_end":28374,"line_start":865,"line_end":865,"column_start":1,"column_end":63}},{"value":"/ build-time version for your usage, you can bypass the version check by","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28375,"byte_end":28449,"line_start":866,"line_end":866,"column_start":1,"column_end":75}},{"value":"/ calling this function before your first connection attempt.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28450,"byte_end":28513,"line_start":867,"line_end":867,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28738,"byte_end":28753,"line_start":874,"line_end":874,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":928}],"decl_id":null,"docs":" Allows interrupting a long-running computation.\n","sig":null,"attributes":[{"value":"/ Allows interrupting a long-running computation.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28675,"byte_end":28726,"line_start":873,"line_end":873,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":29062,"byte_end":29071,"line_start":884,"line_end":884,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Interrupt the query currently executing on another thread. This will\n cause that query to fail with a `SQLITE3_INTERRUPT` error.\n","sig":null,"attributes":[{"value":"/ Interrupt the query currently executing on another thread. This will","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28911,"byte_end":28983,"line_start":882,"line_end":882,"column_start":5,"column_end":77}},{"value":"/ cause that query to fail with a `SQLITE3_INTERRUPT` error.","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28988,"byte_end":29050,"line_start":883,"line_end":883,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63775,"byte_end":63780,"line_start":113,"line_end":113,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":66122,"byte_end":66127,"line_start":158,"line_end":158,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":66249,"byte_end":66254,"line_start":164,"line_end":164,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":66563,"byte_end":66568,"line_start":174,"line_end":174,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":67505,"byte_end":67510,"line_start":196,"line_end":196,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":70860,"byte_end":70865,"line_start":268,"line_end":268,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73338,"byte_end":73348,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":76019,"byte_end":76034,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":79715,"byte_end":79725,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81951,"byte_end":81966,"line_start":69,"line_end":69,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82126,"byte_end":82141,"line_start":77,"line_end":77,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82265,"byte_end":82280,"line_start":83,"line_end":83,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82461,"byte_end":82476,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82874,"byte_end":82888,"line_start":107,"line_end":107,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90147,"byte_end":90153,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90405,"byte_end":90414,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93270,"byte_end":93274,"line_start":104,"line_end":104,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94079,"byte_end":94082,"line_start":131,"line_end":131,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98198,"byte_end":98208,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/inner_connection.rs","byte_start":102902,"byte_end":102917,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/inner_connection.rs","byte_start":111865,"byte_end":111880,"line_start":298,"line_end":298,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":117476,"byte_end":117479,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121311,"byte_end":121314,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121407,"byte_end":121417,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":130818,"byte_end":130830,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":135131,"byte_end":135143,"line_start":175,"line_end":175,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135591,"byte_end":135595,"line_start":14,"line_end":14,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137296,"byte_end":137300,"line_start":65,"line_end":65,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137685,"byte_end":137689,"line_start":81,"line_end":81,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137847,"byte_end":137850,"line_start":92,"line_end":92,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138272,"byte_end":138282,"line_start":113,"line_end":113,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138480,"byte_end":138490,"line_start":122,"line_end":122,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138989,"byte_end":139000,"line_start":144,"line_end":144,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":139206,"byte_end":139217,"line_start":153,"line_end":153,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":139614,"byte_end":139618,"line_start":169,"line_end":169,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140539,"byte_end":140542,"line_start":208,"line_end":208,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146066,"byte_end":146075,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":169448,"byte_end":169457,"line_start":703,"line_end":703,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":169669,"byte_end":169678,"line_start":711,"line_end":711,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":170092,"byte_end":170101,"line_start":726,"line_end":726,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":170203,"byte_end":170212,"line_start":733,"line_end":733,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190045,"byte_end":190056,"line_start":92,"line_end":92,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":194238,"byte_end":194249,"line_start":213,"line_end":213,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":194391,"byte_end":194402,"line_start":222,"line_end":222,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":194472,"byte_end":194481,"line_start":228,"line_end":228,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197738,"byte_end":197747,"line_start":326,"line_end":326,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197889,"byte_end":197898,"line_start":335,"line_end":335,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197968,"byte_end":197978,"line_start":341,"line_end":341,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":221438,"byte_end":221450,"line_start":32,"line_end":32,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":222033,"byte_end":222045,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":222732,"byte_end":222744,"line_start":64,"line_end":64,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225442,"byte_end":225448,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225592,"byte_end":225595,"line_start":158,"line_end":158,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225744,"byte_end":225746,"line_start":164,"line_end":164,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225897,"byte_end":225900,"line_start":170,"line_end":170,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":226040,"byte_end":226043,"line_start":176,"line_end":176,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":227019,"byte_end":227025,"line_start":210,"line_end":210,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":227254,"byte_end":227259,"line_start":219,"line_end":219,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/time.rs","byte_start":229290,"byte_end":229298,"line_start":8,"line_end":8,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/time.rs","byte_start":229563,"byte_end":229571,"line_start":18,"line_end":18,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":232522,"byte_end":232533,"line_start":30,"line_end":30,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":233677,"byte_end":233688,"line_start":74,"line_end":74,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234331,"byte_end":234334,"line_start":93,"line_end":93,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234468,"byte_end":234471,"line_start":99,"line_end":99,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234610,"byte_end":234612,"line_start":105,"line_end":105,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234753,"byte_end":234756,"line_start":111,"line_end":111,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":235932,"byte_end":235938,"line_start":166,"line_end":166,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":236176,"byte_end":236179,"line_start":178,"line_end":178,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":236424,"byte_end":236429,"line_start":190,"line_end":190,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":236552,"byte_end":236558,"line_start":196,"line_end":196,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242084,"byte_end":242089,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242173,"byte_end":242178,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242276,"byte_end":242281,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243230,"byte_end":243235,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243323,"byte_end":243328,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243416,"byte_end":243421,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243513,"byte_end":243518,"line_start":93,"line_end":93,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243616,"byte_end":243621,"line_start":99,"line_end":99,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243795,"byte_end":243800,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244731,"byte_end":244739,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245062,"byte_end":245070,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":246413,"byte_end":246418,"line_start":74,"line_end":74,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":246908,"byte_end":246916,"line_start":89,"line_end":89,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":247036,"byte_end":247044,"line_start":95,"line_end":95,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":247155,"byte_end":247163,"line_start":101,"line_end":101,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":247556,"byte_end":247564,"line_start":113,"line_end":113,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211867,"byte_end":211871,"line_start":94,"line_end":94,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/param_cache.rs","byte_start":255481,"byte_end":255496,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":257463,"byte_end":257475,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":259706,"byte_end":259718,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":259823,"byte_end":259835,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":260014,"byte_end":260026,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":260313,"byte_end":260325,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":260473,"byte_end":260485,"line_start":123,"line_end":123,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":6157,"byte_end":6163,"line_start":222,"line_end":222,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9075,"byte_end":9085,"line_start":322,"line_end":322,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9104,"byte_end":9114,"line_start":324,"line_end":324,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9203,"byte_end":9213,"line_start":330,"line_end":330,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":25627,"byte_end":25637,"line_start":800,"line_end":800,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26688,"byte_end":26697,"line_start":826,"line_end":826,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28824,"byte_end":28839,"line_start":878,"line_end":878,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28864,"byte_end":28879,"line_start":879,"line_end":879,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28889,"byte_end":28904,"line_start":881,"line_end":881,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":2923,"byte_end":2929,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":176}},{"kind":"Mod","span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":3375,"byte_end":3380,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":623}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":63775,"byte_end":63780,"line_start":113,"line_end":113,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1628}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":66122,"byte_end":66127,"line_start":158,"line_end":158,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":66249,"byte_end":66254,"line_start":164,"line_end":164,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":66563,"byte_end":66568,"line_start":174,"line_end":174,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":67505,"byte_end":67510,"line_start":196,"line_end":196,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":6014}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/error.rs","byte_start":70860,"byte_end":70865,"line_start":268,"line_end":268,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":934},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":73338,"byte_end":73348,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/busy.rs","byte_start":76019,"byte_end":76034,"line_start":71,"line_end":71,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":79715,"byte_end":79725,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":81951,"byte_end":81966,"line_start":69,"line_end":69,"column_start":23,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82126,"byte_end":82141,"line_start":77,"line_end":77,"column_start":26,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":2082}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82265,"byte_end":82280,"line_start":83,"line_end":83,"column_start":15,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82461,"byte_end":82476,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/cache.rs","byte_start":82874,"byte_end":82888,"line_start":107,"line_end":107,"column_start":6,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90147,"byte_end":90153,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":90405,"byte_end":90414,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":93270,"byte_end":93274,"line_start":104,"line_end":104,"column_start":13,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/column.rs","byte_start":94079,"byte_end":94082,"line_start":131,"line_end":131,"column_start":13,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/config.rs","byte_start":98198,"byte_end":98208,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/inner_connection.rs","byte_start":102902,"byte_end":102917,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/inner_connection.rs","byte_start":111865,"byte_end":111880,"line_start":298,"line_end":298,"column_start":15,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":117476,"byte_end":117479,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121311,"byte_end":121314,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/pragma.rs","byte_start":121407,"byte_end":121417,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":130818,"byte_end":130830,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/raw_statement.rs","byte_start":135131,"byte_end":135143,"line_start":175,"line_end":175,"column_start":15,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":135591,"byte_end":135595,"line_start":14,"line_end":14,"column_start":13,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137296,"byte_end":137300,"line_start":65,"line_end":65,"column_start":13,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137685,"byte_end":137689,"line_start":81,"line_end":81,"column_start":15,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":137847,"byte_end":137850,"line_start":92,"line_end":92,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":386},"to":{"krate":18,"index":41}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138272,"byte_end":138282,"line_start":113,"line_end":113,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138480,"byte_end":138490,"line_start":122,"line_end":122,"column_start":25,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":4792}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":138989,"byte_end":139000,"line_start":144,"line_end":144,"column_start":22,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":139206,"byte_end":139217,"line_start":153,"line_end":153,"column_start":28,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":4792}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":139614,"byte_end":139618,"line_start":169,"line_end":169,"column_start":43,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":362},"to":{"krate":19,"index":6}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/row.rs","byte_start":140539,"byte_end":140542,"line_start":208,"line_end":208,"column_start":13,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":146066,"byte_end":146075,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":169448,"byte_end":169457,"line_start":703,"line_end":703,"column_start":29,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":169669,"byte_end":169678,"line_start":711,"line_end":711,"column_start":21,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":6009}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":170092,"byte_end":170101,"line_start":726,"line_end":726,"column_start":15,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/statement.rs","byte_start":170203,"byte_end":170212,"line_start":733,"line_end":733,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":190045,"byte_end":190056,"line_start":92,"line_end":92,"column_start":6,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":194238,"byte_end":194249,"line_start":213,"line_end":213,"column_start":16,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":194391,"byte_end":194402,"line_start":222,"line_end":222,"column_start":15,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":194472,"byte_end":194481,"line_start":228,"line_end":228,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197738,"byte_end":197747,"line_start":326,"line_end":326,"column_start":16,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197889,"byte_end":197898,"line_start":335,"line_end":335,"column_start":15,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/transaction.rs","byte_start":197968,"byte_end":197978,"line_start":341,"line_end":341,"column_start":6,"column_end":16},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":221438,"byte_end":221450,"line_start":32,"line_end":32,"column_start":20,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":1628}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":222033,"byte_end":222045,"line_start":46,"line_end":46,"column_start":23,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":6014}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":222732,"byte_end":222744,"line_start":64,"line_end":64,"column_start":16,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":223740,"byte_end":223745,"line_start":88,"line_end":88,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225442,"byte_end":225448,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225592,"byte_end":225595,"line_start":158,"line_end":158,"column_start":18,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225744,"byte_end":225746,"line_start":164,"line_end":164,"column_start":27,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":2995},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":225897,"byte_end":225900,"line_start":170,"line_end":170,"column_start":29,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":3841},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":226040,"byte_end":226043,"line_start":176,"line_end":176,"column_start":18,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":227019,"byte_end":227025,"line_start":210,"line_end":210,"column_start":30,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":2,"index":29487},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/from_sql.rs","byte_start":227254,"byte_end":227259,"line_start":219,"line_end":219,"column_start":18,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/time.rs","byte_start":229290,"byte_end":229298,"line_start":8,"line_end":8,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":22,"index":359},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/time.rs","byte_start":229563,"byte_end":229571,"line_start":18,"line_end":18,"column_start":24,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":22,"index":359},"to":{"krate":0,"index":648}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":232522,"byte_end":232533,"line_start":30,"line_end":30,"column_start":37,"column_end":48},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":233677,"byte_end":233688,"line_start":74,"line_end":74,"column_start":16,"column_end":27},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1109},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234331,"byte_end":234334,"line_start":93,"line_end":93,"column_start":45,"column_end":48},"kind":{"Impl":{"id":67}},"from":{"krate":5,"index":323},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234468,"byte_end":234471,"line_start":99,"line_end":99,"column_start":35,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234610,"byte_end":234612,"line_start":105,"line_end":105,"column_start":44,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":2995},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":234753,"byte_end":234756,"line_start":111,"line_end":111,"column_start":46,"column_end":49},"kind":{"Impl":{"id":70}},"from":{"krate":5,"index":3841},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":235932,"byte_end":235938,"line_start":166,"line_end":166,"column_start":16,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":236176,"byte_end":236179,"line_start":178,"line_end":178,"column_start":16,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":236424,"byte_end":236429,"line_start":190,"line_end":190,"column_start":16,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1177},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/to_sql.rs","byte_start":236552,"byte_end":236558,"line_start":196,"line_end":196,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":2,"index":29487},"to":{"krate":0,"index":712}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242084,"byte_end":242089,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242173,"byte_end":242178,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":242276,"byte_end":242281,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243230,"byte_end":243235,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243323,"byte_end":243328,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243416,"byte_end":243421,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243513,"byte_end":243518,"line_start":93,"line_end":93,"column_start":24,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243616,"byte_end":243621,"line_start":99,"line_end":99,"column_start":29,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value.rs","byte_start":243795,"byte_end":243800,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":244731,"byte_end":244739,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":245062,"byte_end":245070,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":246413,"byte_end":246418,"line_start":74,"line_end":74,"column_start":29,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":246908,"byte_end":246916,"line_start":89,"line_end":89,"column_start":28,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":247036,"byte_end":247044,"line_start":95,"line_end":95,"column_start":29,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":247155,"byte_end":247163,"line_start":101,"line_end":101,"column_start":30,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/value_ref.rs","byte_start":247556,"byte_end":247564,"line_start":113,"line_end":113,"column_start":33,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":1819}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/types/mod.rs","byte_start":211867,"byte_end":211871,"line_start":94,"line_end":94,"column_start":23,"column_end":27},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1247},"to":{"krate":2,"index":6014}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/param_cache.rs","byte_start":255481,"byte_end":255496,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":257463,"byte_end":257475,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":259706,"byte_end":259718,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":259823,"byte_end":259835,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":6009}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":260014,"byte_end":260026,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":260313,"byte_end":260325,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1628}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/util/small_cstr.rs","byte_start":260473,"byte_end":260485,"line_start":123,"line_end":123,"column_start":35,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":1578}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":6157,"byte_end":6163,"line_start":222,"line_end":222,"column_start":34,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":856},"to":{"krate":0,"index":859}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9075,"byte_end":9085,"line_start":322,"line_end":322,"column_start":22,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":1898}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9104,"byte_end":9114,"line_start":324,"line_end":324,"column_start":15,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":9203,"byte_end":9213,"line_start":330,"line_end":330,"column_start":6,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":25627,"byte_end":25637,"line_start":800,"line_end":800,"column_start":21,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":6009}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":26688,"byte_end":26697,"line_start":826,"line_end":826,"column_start":18,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28824,"byte_end":28839,"line_start":878,"line_end":878,"column_start":22,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":1898}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28864,"byte_end":28879,"line_start":879,"line_end":879,"column_start":22,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/Users/watanabeshunsuke/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.23.1/src/lib.rs","byte_start":28889,"byte_end":28904,"line_start":881,"line_end":881,"column_start":6,"column_end":21},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}}]}